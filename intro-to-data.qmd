# Introduction to data {#sec-intro-to-data}

```{r load-background-files}
#| include: false
source("_common.R")
```

:::{.underconstruction data-latex="}

Incomplete draft, additions and proofing to come

:::

:::{.todo data-latex=""}


- Add substantive detail to fig-alt captions

- Indexing of data is incomplete

- Use patchwork to align plots in @fig-trees-carbon-beeswarm, label subplots with plot_annotation

- Add guided practice and worked examples, esp relationships between 2 numerical variables

- More detail about the  infant mortality data: source, possible bias    

- Add chapter summary


:::


::: {.chapterintro data-latex=""}
Formulating a question and collecting data often represent the start of a systematic approach to investigating a scientific question. The discipline of statistics focuses on addressing the following three issues: How can data best be collected? How can data be organized, summarized, and explored? What can be learned from the data about possible answers to the question?  

This chapter provides an introduction to methods for summarizing and exploring data; the next chapter will discuss principles of collecting data. 
:::



```{r start-collecting-terms}
#| include: false
terms_chp_1 <- c("data")

```

## Case study: Examining carbon sequestration {#sec-case-study-examining-carbon-sequestration}

```{r portland-tree-fetch, include = FALSE}
library(pdxTrees)
set.seed(080546)

pdx <- get_pdxTrees_parks()
mu <- mean(pdx$Carbon_Storage_lb, na.rm = TRUE)
sigma <- round(sd(pdx$Carbon_Storage_lb, na.rm = TRUE),2)
pdxTrees_parks_sample <- pdx  |> 
  dplyr::select(Common_Name, 
                Functional_Type,
                Condition, 
                Tree_Height, 
                Structural_Value, 
                Carbon_Storage_lb, 
                Pollution_Removal_value,
                Carbon_Sequestration_value,
                Carbon_Sequestration_lb) |>  
  mutate(Condition = factor(Condition,
                            levels = c("Dead",
                                       "Poor",
                                       "Fair",
                                       "Good"),
                            ordered = TRUE)) |> 
  mutate(Functional_Type = case_when(
    Functional_Type == "BD" ~ "Broadleaf Deciduous",
    Functional_Type == "BE" ~ "Broadleaf Evergreen",
    Functional_Type == "CD" ~ "Coniferous Deciduous",
    Functional_Type == "CE" ~ "Coniferous Evergreen"
  )) |> 
  drop_na() |> 
  dplyr::slice_sample(n = 500) 

save(pdxTrees_parks_sample, file = "./data/pdxTrees_parks_sample.Rdata")
  
                
```

```{r}
load("./data/pdxTrees_parks_sample.Rdata")
portland_size <- nrow(pdxTrees_parks_sample)
```

\index{data!pdxTrees|(}

During photosynthesis, trees remove carbon dioxide from the air, combine it with water, and convert it to sugars and oxygen.^[The sugars created during photosynthesis are primarily sucrose, glucose and fructose.] The sugars are then distributed throughout the tree's tissues. This process of capturing carbon from the air and storing it is called carbon sequestration. Forests typically store twice as much carbon as they emit and are an important component in mitigating the effect of greenhouse gases on climate change. 

How much carbon do trees store? How does the amount of carbon stored relate to features such as tree height and type?

Data from the [Tree Inventory Project](https://www.portland.gov/trees/get-involved/treeinventory) can be used to explore such questions. The project has compiled a comprehensive inventory of trees in Portland, Oregon; these data are important for managing Portland's urban forest, a particularly valuable resource.  According to [Portlandâ€™s city government](https://www.portland.gov/council/documents/ordinance/passed/191975), trees provide an estimated $40 million annually in environmental benefits to Portland, including air pollution removal, reducing storm water runoff, and carbon sequestration. 

The tree inventory represents a substantial data collection effort; Portland Parks \& Recreation (a Bureau of the City of Portland, Oregon) partnered with communities to measure nearly 280,000 trees since 2010. Information such as size, condition, species, and location were measured for each tree and these measurements were also used to estimate quantities such as a tree's amount of carbon stored and its financial value (both as a landscape asset and as a tool for mitigating greenhouse gases).

How can all this information be used to better understand the urban forest? It would be impossible to make sense of the data by trying to read through each of the measurements for each tree. Instead, these data need to be organized in a way that makes it feasible to calculate summaries and identify trends. As defined in [*Data Feminism*](https://data-feminism.mitpress.mit.edu/pub/h1w0nbqp/release/3) [@dignazio2023data], "Data, after all, is information made tractable." The measurements collected in the field must be structured in a way that facilitates operations such as counting, sorting, and visualizing. 

@fig-trees-carbon-height-type shows how the relationship between amount of carbon removed from the atmosphere and tree height differs by functional type. Visualization is a powerful tool for exploring data as well as a compelling way to present data stories. Even without much additional familiarity with these data, a viewer can already glean some key ideas from the visualization, such as how most of the trees are either broadleaf deciduous (red dots) or coniferous evergreen (purple dots) and that the relationship between amount of carbon stored and tree height appears different for coniferous evergreen trees compared to the broadleaf deciduous trees. 

This chapter will discuss fundamental principles behind summarizing and visualizing data, examining relationships between variables, and interpreting visualizations.

```{r, message = F}
#| label: fig-trees-carbon-height-type
#| fig-cap: Relationship between carbon sequestration, tree height, and functional type.
pdxTrees_parks_sample |>  
  ggplot(aes(y = Carbon_Sequestration_lb,
                                x = Tree_Height,
                                color = Functional_Type)) +
  geom_point(alpha = 0.50) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Carbon Sequestration (lbs)",
       x = "Tree Height (ft)",
       color = "Functional Type")
```

\index{data!pdxTrees|)}

## Organizing and classifying data {#sec-data-organization}

### Observations, variables and data matrices {#sec-data-observations}

The Tree Inventory Project was completed separately for street trees and park trees in Portland, Oregon. Street trees are loosely defined as those generally in the public right-of-way, usually between the sidewalk and the street; park trees are those in neighborhood parks. The street trees were inventoried from 2010 and 2016, then the park trees were inventoried from 2017 to 2019.^[In 2024, Urban Forestry staff completed a re-inventory of street trees.] 

This section introduces and explores some of the 34 variables collected. The full data from the tree inventory completed from 2010 - 2019 is available via the [`pdxTrees` R package](https://github.com/mcconvil/pdxTrees). The data used in this chapter are from a random sample of `r portland_size` trees from the inventory of park trees; these are in a dataset called `pdxTrees_parks_sample`. @tbl-portland-tree-descriptions shows the variable names and definitions for the variables included in `pdxTrees_parks_sample`.

| Variable Name | Variable description |
|:------------------------------|:----------------------------------------|
| `Common_Name` | Common name of the tree |
| `Functional_Type` | A categorical variable with values "Broadleaf Deciduous", "Broadleaf Evergreen", "Coniferous Deciduous", "Coniferous Evergreen" |
| `Condition` | A categorical variable with values "Good", "Fair",  "Poor", "Dead"  |
| `Tree_Height` | Height from the ground to the live top of the tree, measured in feet. For dead trees, total height was measured. |
| `Structural_Value` | An estimate of the monetary value of replacing the tree and the benefits that it provides, based on methods from the Council of Tree and Landscape Appraisers |
| `Carbon_Storage_lb` | An estimate of the amount of carbon (in lbs.) that is bound up in both the above-ground and below-ground parts of the tree. It is total amount of carbon that is currently stored in the biomass of a tree. |
| `Pollution_Removal_value` | An estimate of the monetary value associated with tree effects on atmospheric pollution annually. Expressed in US dollars and reflects the cost savings associated with the tree's role in improving air quality. |
| `Carbon_Sequestration_lb` | An estimate of the amount of carbon sequestered annually. |
| `Carbon_Sequestration_value` | Similar to `Pollution_Removal_value`, but an estimate of the financial value the annual carbon removal of the tree in terms of pollution mitigation. Expressed in US dollars. |

: Variable descriptions in the Portland tree data {#tbl-portland-tree-descriptions} {tbl-colwidths="\[25,75\]"}

```{r total-carbon, include = FALSE}
ds  <- pdxTrees_parks_sample
carb_sum  <- round(sum(ds$Carbon_Storage_lb),0)
```

When beginning to work with a dataset, it is important to  ascertain the definitions of variables and gain a basic understanding of how the data were collected. 

Checking measurement units is a good starting point. A reliable data source should always clearly provide units and information about how variables are defined. Portland Parks & Recreation not only reported measurements units but also provides access to a [manual](https://www.portland.gov/sites/default/files/2020/training-book-2019-web-version.pdf) with the data protocol explaining how measurements were collected. For example, the manual notes that tree height should be recorded in feet and the final recorded measurement is an average of two measurements taken by two different team members.

Some variables, such as `Carbon_Storage_lb`, cannot be measured directly and instead are estimated from observable features such as `Tree_Height` and `Condition`. The Portland team used tools available in [iTree](https://www.itreetools.org/) to estimate values for such variables. 

@tbl-pdxTreesDF shows data from 6 randomly selected trees from the `r portland_size` in this sample. Each row represents a **case** and each column represents a recorded characteristic, called a \index{variable} **variable**. A case may also be called an \index{observational unit} **observational unit**, which refers to the individual entity being measured. Since these variables are being observed for each tree, the cases in these data are trees.

Because the observations are organized into rows and columns, the dataset is sometimes called a \index{data table} **data table** or a \term{data matrix} **data matrix**. Data matrices are a convenient way to record and store data. If data are collected for another observational unit, a new row can easily be added. Similarly, new column can be added for a new variable.

```{r pdxTrees-example-data}
#| label:  tbl-pdxTreesDF
#| tbl-cap:  "Six observations from the Portland trees dataset"
#| tbl-pos: H
set.seed(080548) 
pdxTrees_parks_sample |> 
  sample_n(6) |>
  kbl(linesep = "", booktabs = TRUE, align = "llrrr")|>
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE)

```

The Portland trees data were gathered to understand the \index{population} **population** of trees in Portland's urban forest. The Tree Inventory Project represents an example of a census, which is a complete count of all units in a population. In many settings, it is not feasible to collect information on all observational units and instead, only a subset of units (i.e., a \index{sample} **sample**) will be observed. The principles of collecting representative samples will be discussed in @sec-collecting-data.

```{r}
terms_chp_1 <- c(terms_chp_1, c("data matrix",
                                "data table",
                                "case",
                                "observational unit",
                                "variable")
                )
```

### Types of variables {#sec-data-variable-types}

A variable like `Tree_Height` is considered a \index{numerical variable} **numerical variable** since it takes on numeric values for which it makes sense to perform arithmetic operations. For example, the values of `Tree_Height` can be averaged. 

Not all variables that have numeric values have this property. Consider a dataset with information about students with a variable that records mobile phone numbers or a variable containing student identification numbers. While quantities such as a phone number or identification number consist of numeric values, taking the average of these values does not produce a quantity that has meaning in the context of the data. Variables that uniquely identify cases in a dataset can be referred to as \index{identification variables} **identification (ID) variables**.^[Note that identification variables do not have to take on numeric values and could instead be unique labels such as names.] 

Numerical variables can be either continuous numerical variables or discrete numerical variables. Variables like `Tree_Height` or `Carbon_Sequestration_lb` are \index{numerical variable!continuous} **continuous numerical variables** because they can take on any value within a specified range. A variable that, for example, counts the number of trunks on a tree, is a \index{numerical variable!discrete} **discrete numerical variable**, a variable that can take on a limited set of values; in this case, the number of trunks can only be an positive integer value since a tree cannot have, say, 2.5 trunks.

Variables like `Functional_Type` and `Condition` are \index{categorical variables} **categorical variables** (also called \index{qualitative variables} **qualitative variables**) because they take on values that are names or labels. When the labels of a categorical variable have no natural ordering, it is a \index{nominal categorical variable}  **nominal categorical variable**; otherwise, it is an \index{ordered categorical variable} **ordered categorical variable**. `Condition` is an ordered categorical variable since there is a natural progression in condition from worst to best: `Dead`, `Poor`, `Fair`, `Good`. In contrast, `Functional_Type` simply represents different types of trees. 


```{r}
terms_chp_1 <- c(terms_chp_1, c("numerical variable",
                                "quantitative variable",
                                "qualitative variable",
                                "continuous numerical variable",
                                "discrete numerical variable",
                                "categorical variable",
                                "nominal categorical variable",
                                "ordered categorical variable",
                                "identification variable")
                 )
```

When data are collected, there may be some amount of data cleaning required before the data can be presented as numerical or categorical variables that are easily analyzed. An opinion survey might record open-ended responses to a survey which will initially appear as unstructured text data. Someone interested in analyzing whether the responses represent positive impressions might first need to apply specialized techniques to count the number of words in a response associated with positive emotions to construct a numerical variable. Other sorts of unstructured data include images, such as those from an imaging procedure like magnetic resonance imaging (MRI). Methods for handling unstructured data are not discussed in this text.

@fig-variable-types shows the main types of variables explored in this text. 
```{r}
#| label: fig-variable-types
#| fig-cap: Types of variables explored in this text.
#| fig-asp: 0.4
#| fig-alt: |
#|   Variables are classfied as numerical (either discrete
#|   or continuous) or categorical (either ordinal or nominal).
par_og <- par(no.readonly = TRUE) # save original par
par(mar = rep(0, 4))
plot(c(-0.15, 1.3), 0:1, type = "n", axes = FALSE)

text(0.6, 0.9, "Variables in this text")
rect(0.4, 0.8, 0.8, 1)

text(0.25, 0.5, "Numerical")
rect(0.1, 0.4, 0.4, 0.6)
arrows(0.45, 0.78, 0.34, 0.62, length = 0.08)

text(0.9, 0.5, "Categorical")
rect(0.73, 0.4, 1.07, 0.6)
arrows(0.76, 0.78, 0.85, 0.62, length = 0.08)

text(0, 0.1, "Discrete")
rect(-0.17, 0, 0.17, 0.2)
arrows(0.13, 0.38, 0.05, 0.22, length = 0.08)

text(0.39, 0.1, "Continuous")
rect(0.25, 0, 0.53, 0.2)
arrows(0.35, 0.38, 0.4, 0.22, length = 0.08)

text(0.77, 0.105, "Ordinal")
rect(0.64, 0, 0.9, 0.2)
arrows(0.82, 0.38, 0.77, 0.22, length = 0.08)

text(1.12, 0.1, "Nominal")
rect(0.99, 0, 1.25, 0.2)
arrows(1.02, 0.38, 1.1, 0.22, length = 0.08)
par(par_og) # restore original par
```


::: {.workedexample data-latex=""}
Classify the variables `Common_Name` and `Structural_Value` in the Portland trees data. Briefly justify your reasoning.

------------------------------------------------------------------------

The variable `Common_Name` takes on labels as values since these are (the non-scientific) names of different tree species; this is a nominal categorical variable since the names do not have a natural sense of progression to them. The `Structural_Value` variable is a continuous numerical value since it takes on numerical values for which arithmetic operations are reasonable and the estimated monetary value of replacing a tree can be any value within a range. 
:::

::: {.guidedpractice data-latex=""}
Answers to guided practice problems are provided in the footnotes. Suppose that on a given day, a research assistant collected data on the first 20 individuals visiting a walk-in clinic: `age` (measured as less than 21, 21 - 65, and greater than 65 years of age), `gender`, `height`, `weight`, and `reason for the visit`. Classify each of the variables.[^intro-to-data-2]
:::

[^intro-to-data-2]: The variables `height` and `weight` are continuous numerical variables. `Age` as measured by the research assistant is ordinal categorical. `Sex` and the reason for the visit are nominal categorical variables.

\index{data!pdxTrees|)}

## Summarizing and visualizing data {#sec-summarizing-visualizing-data}

While the specific methods for summarizing and visualizing data differ for a categorical variable as opposed to a numerical variable, the common goal is to understand the features of a variable's \index{distribution} **distribution**, i.e., its collection of values.

### Categorical data {#sec-summarizing-categorical-data}

\index{data!crabs|(}

During spawning, a female horseshoe crab migrates to shore with a male attached to her posterior spines to lay clusters of eggs in the sand. Each cluster of eggs, called a clutch, typically contains 4,000 to 5,000 eggs. During a single nesting event, a female may lay 5 to 6 clutches. Unattached males, known as satellites, form groups around nesting pairs and compete with the attached males for fertilization by releasing sperm near the femaleâ€™s eggs. Satellite males can achieve high fertilization rates, allowing older or damaged males to compete with the dominant male without dislodging him.^[See [https://horseshoecrab.org/](https://horseshoecrab.org/) for more information about these interesting creatures.]

In 1996, H.J. Brockmann [@brockmann1996satellite] conducted a comprehensive study of mating horseshoe crabs on two beaches along the Delaware (USA) shore. Her data suggested that satellites did not cluster randomly around mating pairs and that this clustering was not influenced by environmental conditions nor the length of time the mating pair had been on the beach. She hypothesized that unattached males were attracted to females with certain features.

The `crabs` data includes 5 recorded measurements for each female crab and is available on Professor Alan Agresti's University of Florida [web page](https://users.stat.ufl.edu/~aa/cda/data.html). @tbl-crabs-variable-descriptions contains the variable descriptions and @tbl-crabsDF shows data from  6 randomly selected crabs from the 173 female crabs observed. 

| Variable Name | Variable description |
|:------------------------------|:----------------------------------------|
| `color` | Color of the female crab's carapace (the shell carried by the crab on its back), with 4 values "light medium", "medium", "dark medium", "dark" |
| `spine` | Condition of the two spines along the edge of female's abdomen, with 3 values "both good", "one worn or broken", "both worn or broken". |
| `width` | Width of the female's carapace, in centimeters, |
| `satell` | Number of male satellites the crab has attracted |
| `weight` | Weight of the female, in grams. |

: Variable descriptions in the `crabs` data {#tbl-crabs-variable descriptions} {tbl-colwidths="[25,75]"}

```{r load-crabs}
load("data/crabs.Rdata")
```

```{r crab-example-data}
#| label:  tbl-crabsDF
#| tbl-cap:  "Six observations from the crabs dataset"
#| tbl-pos: H
set.seed(080548) 
crabs  |> 
  sample_n(6) |>
  select(-y) |> 
  kbl(linesep = "", booktabs = TRUE, align = "llrrr")|>
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE)

```

Categorical data are summarized in tables that convey how many observations belong to each category. @tbl-crabs-colors-frequency shows how the 173 female crabs are distributed among the different carapace color groups. 

```{r crabs-colors-freq-tbl}
#| label: tbl-crabs-colors-frequency
#| tbl-cap:  "Distribution of carapace colors of the 173 female crabs in the crabs dataset.  The Count column
#|    indicates the number of crabs with each of the colors."
#| tbl-pos: H
crabs |> 
  count(color) |>
  rename(Color = color) |> 
  rename(Count = n)  |> 
  adorn_totals(where = "row") |>
  kbl(linesep = "",
      booktabs = TRUE,
      align = "lrr") |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  

```

@tbl-crabs-colors-frequency is a \index{frequency table} **frequency table**; it shows the counts within each category. A table with the proportions within each category is called a \index{relative frequency table} **relative frequency table**. @tbl-crabs-colors-relative-frequency shows that the majority of female crabs are in the "medium" carapace color category (54.9%). 

```{r crabs-color-rel-freq-tbl}
#| label: tbl-crabs-colors-relative-frequency
#| tbl-cap:  "Distribution of carapace colors of the 173 female crabs in the crabs dataset, including counts and proportions."
#| tbl-pos: H

crabs |> 
  count(color) |>
  mutate("Proportion" = n/sum(n)) |>
  rename(Count = n) |>
  rename(Color = color) |> 
  adorn_totals(where = "row") |>
  kbl(linesep = "",
      booktabs = TRUE,
      align = "lrr") |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  
```

For ordered categorical variables, it can also be useful to include a column of cumulative proportions showing the fraction of cases up to and including each category in the natural ordering of the variable.

@tbl-crabs-spine-cumulative-frequency shows the counts, proportions, and cumulative proportions for the condition of the spines. Spine injuries are common in this group: only 21% of the crabs have no worn or broken spines.

```{r crabs-color-cum-freq-tbl}
#| label: tbl-crabs-spine-cumulative-frequency
#| tbl-cap:  "Counts, proportions and cumulative proportions of  spine condition 
#|     in the `crabs` dataset."
#| fig-alt: "Counts, proportions and cumulative proportions of spine condition
#|    in the `crabs` dataset."
#| tbl-pos: H
source("_common.R")


crabs |> 
  count(spine) |> 
  mutate(`Proportion` = n/sum(n)) |>
  mutate(`Cumulative proportion` = cumsum(`Proportion`)) |> 
  rename(Count = n) |> 
  rename(`Spine condition` = spine) |> 
  kbl(linesep = "", 
      booktabs = TRUE,
      align = "lrrr") |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )

```

\index{bar plot} The **bar plots** in @fig-crabs-counts-proportions provide a visual display of the data in @tbl-crabs-colors-relative-frequency. The plot on the left shows the numbers of crabs with each color; the right-hand side plot shows the proportions. Since proportions are the counts divided the total sample size, the two figures have the same shape; a bar plot with proportions is a re-scaled version of the bar plot with counts.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("frequency table", 
                                "relative frequency table",
                                "bar plot"))
```

[Sections @sec-relationships-two-categorical] and [-@sec-relationships-one-numerical-one-categorical] explore how these and other features of female crabs are associated with the number of male satellites attracted during spawning.

```{r crabs-bar-graph}
#| label: fig-crabs-counts-proportions
#| fig-cap: Distribution of crab carapace colors.
#| fig-subcap:
#|   - Counts of color.
#|   - Proportions of color.
#| fig-alt: |
#|   Counts and proportions of the values of the color of the crabs.  Light medium
#|   is the most common color. 
#| fig-width: 4
#| layout-ncol: 2
ggplot(crabs, aes(x = color)) +
  geom_bar(fill = IMSCOL["blue", "full"]) +
  labs(x = "Carapace color", y = "Count")

crabs |>
  count(color) |>
  mutate(proportion = n / sum(n)) |>
  ggplot(aes(x = color, y = proportion)) +
  geom_col(fill = IMSCOL["blue", "full"]) +
  labs(x = "Carapace color", y = "Proportion")
```
\index{data!crabs|)}

### Numerical data {#sec-summarizing-numerical-data}

**Finding the center and spread of a distribution**

\index{data!pdxTrees|(}

The distribution of a numerical variable can be characterized by its center and its spread. While knowing the center of a distribution provides some information about the value of a typical observation, the spread conveys a sense of whether observations tend to be similar to each other.

The \index{mean} **mean**, sometimes called the \indexthis{average}{mean!average} average, is a measure of center denoted (generically) by $\overline{x}$. The average carbon storage in this sample of `r portland_size` trees is calculated by summing all the storage values and dividing by the total number of trees, as illustrated below.

```{r illus-sample-mean, include=FALSE}

# for illustrating sample mean median
# population mean mu and sd sigma calculated in code fetching data

x <- pdxTrees_parks_sample$Carbon_Storage_lb
x1 <- x[1]
x2 <- x[2]
x3 <- x[3]
xl <- x[length(x)]
m <- round(mean(x),2)
M <- median(x)
l <- length(x)
sorted <- sort(x)
middle_low <- sorted[250]
middle_high <- sorted[251]

```

\begin{align*}
\overline{x} =& \frac{`r x1` + `r x2` + `r x3` \cdots + `r xl`}{`r l`} = `r m`\,\textrm{lbs}.
\end{align*}

The quantity $\overline{x}$ is referred to as a \index{sample mean} **sample mean**, the mean of values in a sample. The \index{population mean} **population mean**, the mean of values in the population from which the sample was selected, is denoted by the Greek letter $\mu$. In the tree data, $\mu$ represents the average amount of carbon stored in all 25,534  trees in the Portland parks. [^intro-to-data-4]

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("mean",
                                "sample mean",
                                "population mean")
)
```

[^intro-to-data-4]: Population means are almost never known because data on complete populations are rare. However, the tree inventory is a complete census all trees in Portland parks and so the mean $\mu$ of `Carbon_Storage_lb` can be calculated; it is  `r mu` lbs.

::: {.important data-latex=""}
**Mean.**

The sample mean of a variable is the sum of the observed values divided by the number of observations in the sample:

\vspace{-5mm}

$$ \bar{x} = \frac{x_1 + x_2 + \cdots + x_n}{n} $$
:::


The \index{median} **median** is another measure of center; it is the middle value of a distribution after the values have been ordered from smallest to largest. The median divides the distribution into two equal parts where half of the values are less than the median and half are greater. When there are an odd number of observations, there is one middle value with the same number of observations below and above it. When the number of observations is even, the median is the average of the two middle observations.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("median"))
                        
```

In the Portland tree sample, there are  `r portland_size`  trees. After the carbon storage values have been sorted in ascending order, the median  `r M`  is the average of the observations in rows  250  and  251 , `r middle_low`  and  `r middle_high`  respectively.

::: {.important data-latex=""}
**Median**

If the data are ordered from smallest to largest, the **median** is the middle observation. If there are an even number of observations, the median is the average of the two middle observations.
:::

```{r calcs-for-deviation-example, include = FALSE}
#  code for simple calcs
#  for illustrating var and sd
d1 <- x1 - m
d2 <- x2 - m
d3 <- x3 - m
dl <- xl - m

# squared deviations
#
d1_sq <-  round(d1^2, 2)
d2_sq <-  round(d2^2, 2)
d3_sq <-  round(d3^2, 2)
dl_sq  <-  round(dl^2, 2)

sd_den = length(x) - 1

q <- round(sd(x), 2)
q2 <- round(var(x), 2)

```

The \index{standard deviation} **standard deviation** and \index{interquartile range} **interquartile range** are two common measures of spread.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("standard deviation",
                                "interquartile range (IQR)",
                                "variance",
                                "sample variance",
                                "population variance",
                                "standard deviation",
                                "sample standard deviation",
                                "population standard deviation")
)
```


The standard deviation describes the typical distance between an observation and the mean. The distance of an observation from the mean is its \index{deviation} **deviation**. The deviations for the 1^st^, 2^nd^, 3^rd^, and 500^th^ observations of carbon storage are: \begin{align*}
x_1-\overline{x} &= `r x1` - `r m` = `r x1 - m` \hspace{5mm}\text{ } \\
x_2-\overline{x} &= `r x2` - `r m` = `r x2 - m` \\
x_3-\overline{x} &= `r x3` - `r m` = `r x3 - m` \\
&\ \vdots \\
x_{500}-\overline{x} &= `r xl` - `r m` = `r xl - m`
\end{align*}

The units for these four values are lbs.

The \index{sample variance} **sample variance** is the average of the squares of these deviations, denoted by $s^2$. For carbon storage,

\begin{align*}
s^2 &= \frac{`r d1`^2 + (`r d2`)^2 + (`r d3`)^2 + \cdots + (`r dl`)^2}{`r sd_den`} \\
&= `r comma(q2)`.
\end{align*}

The denominator of the variance is $n-1$ (499) rather than $n$ (500) for reasons that will be explained later. The units of the variance are the square of the units of the original measurements, in this case lb^2^.

The \index{sample standard deviation} **sample standard deviation** $s$ is the square root of the variance: 
$$
s=\sqrt{`r q2`} = `r q` \,\textrm{lbs}.
$$


The \index{population standard deviation} **population standard deviation** is denoted by the Greek letter $\sigma$. In this case $\sigma$ is the standard deviation of the distribution of carbon storage values for all 25,534 trees in the Portland parks. [^intro-to-data-5]

[^intro-to-data-5]: Calculated as `r sigma` lbs  from the complete inventory.

::: {.important data-latex=""}
**Sample standard deviation.**

The sample standard deviation is the square root of the sum of the squared distances of each value from the mean divided by the number of observations minus one:

\vspace{-5mm}

$$
s = \sqrt{\frac{\sum_{i=1}^n (x_i - \bar{x})^2}{n-1}}
$$
:::

The \index{interquartile range} **interquartile range**, or \index{IQR} **IQR**, is the distance between the third quartile ($Q_3$) and the first quartile ($Q_1$), expressed as $\text{IQR} = Q_3 - Q_1$. The first quartile ($Q_1$), also known as the 25^th^ percentile, is the value below which 25%  of the data fall.[^intro-to-data-6]
 Similarly, the third quartile ($Q_3$), or the 75^th^ percentile, is the value below which  75%  of the data fall. 

The median can be referred to as $Q_2$, since it is the second quartile (the 50^th^ percentile). Together, $Q_1$, $Q_2$, and $Q_3$ divide the data into four equal chunks, each containing approximately 25%  of the observations.

```{r, calc-90-quantile, include=FALSE}
q_9 <-  quantile(pdxTrees_parks_sample$Carbon_Storage_lb, probs = 0.90)

```

[^intro-to-data-6]: An $\alpha$^th^ **percentile** \index{percentile} is a number with $\alpha$% of the observations below it and $(100-\alpha)$% of the observations above it. For example, the 90^th^ percentile of `Carbon_Storage_lb` (`r q_9`) is larger than  90%  of the carbon values and smaller than 10%.

::: {.important data-latex=""}
**Interquartile range (IQR).**

The interquartile range (IQR) is $Q_3 - Q_1,$ where $Q_1$ and $Q_3$ are the 25^th^ and 75^th^ percentiles of a distribution. 
:::



The \index{five number summary} **five number summary** is a compact numerical summary providing the largest and smallest observations, the first and third quartiles, and the median. @tbl-trees-five-num-summ-carbon shows the five number summary for `Carbon_Storage_lb` and also includes the mean.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("percentile", 
                                "five number summary")
                 )
```


```{r trees-carbon-five-num-summ}
#| label: tbl-trees-five-num-summ-carbon
#| tbl-cap: |
#|   The five number summary and the mean for carbon storage values in Portland tree data.
#| tbl-pos: H
summ_stat_portland_trees<- pdxTrees_parks_sample |> 
  summarize(
    Minimum = min(Carbon_Storage_lb),
    `First Quartile (Q1)` = quantile(Carbon_Storage_lb, probs = 0.25),
    Median = median(Carbon_Storage_lb),
    Mean = mean(Carbon_Storage_lb),
    `Third Quartile (Q3)` = quantile(Carbon_Storage_lb, probs = 0.75),
    Maximum = max(Carbon_Storage_lb)
  ) 

summ_stat_portland_trees |> 
  mutate(across(where(is.numeric), ~ num(., digits = 1))) |> 
  kbl(linesep = "", 
      booktabs = TRUE, 
      align = "rrrrrr",
      digits = 2)  |>
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped")
  )

```

```{r describing-trees-five-num-summary, include=FALSE}
# values for text below
# 
cs_lb <- pdxTrees_parks_sample$Carbon_Storage_lb
min_nr <- min(cs_lb)
min_r <- round(min_nr, 0)
max_r <- round(max(cs_lb), 0)
med <- median(cs_lb)
q1_r <- round(quantile(cs_lb, probs = 0.25), 0)
q3_r <- round(quantile(cs_lb, probs = 0.75), 0)
iqr_r <- q3_r - q1_r
m_r <- round(mean(cs_lb),1)

```


These 500 trees store an impressive amount of carbon, ranging from  `r min_nr`  to approximately  `r max_r`lbs! The median  `r med`lbs splits the data in half: 50%  of these trees store at least `r med`lbs of carbon. The middle 50% of the trees store between `r q1_r` lbs and `r q3_r` lbs of carbon. 

The (aptly named) **beeswarm plot** \index{beeswarm plot} in @fig-trees-carbon-beeswarm shows an interesting feature of the distribution. In regions of the horizontal axis where the plot is wide, there are large numbers of observations. The plot narrows as storage amounts increase and the number of observations decreases. There are many trees storing relatively smaller amounts of carbon (less than 2,000lbs), but a few with very large amounts such as 8,000lbs and even greater than 14,000lbs. Averages are sensitive to extreme values at one end of a distribution. The large values in the right tail of the beeswarm plot explain the large value for the variance of `Carbon_Storage_lb`, as well as why the mean is larger than the median.

```{r beeswarm-carbon}
#| label: fig-trees-carbon-beeswarm
#| fig-cap: Beeswarm plot showing the distribution of carbon storage values in the Portland tree data
#| fig-alt: |
#|   Beeswarm plot showing the distribution of carbon storage values 
#|     in the Portland tree data.
#|     The large values at the right edge of the plot cause the mean to be larger 
#|     than the median.
#| fig-asp: 0.4

library(ggbeeswarm)
pdxTrees_parks_sample |> 
  mutate(y = "  ") |> 
  ggplot(mapping=aes(x =  Carbon_Storage_lb, y = y)) + 
  geom_point(shape = 21,
             cex = .05)  +
  geom_quasirandom(method = "pseudorandom",
                   dodge.width = 0.05) +
  scale_x_continuous(
    breaks = seq(0, 16000, 2000))  +
  labs(x = "Carbon storage (lbs)", y = "") +
  theme(axis.ticks.y = element_blank())

```

```{r robust-example, include = FALSE}

x <- c(2, 4, 6, 8, 10)
mean(x) 
x_sd <- sd(x)
y <- c(2,4,6,8,40)
y_m <- mean(y)
y_sd <- sd(y)

```

The median is a \index{robust statistic} **robust statistic** because, unlike the mean, it is minimally affected by a few extreme observations at one end of a distribution. For the same reason, the IQR is a robust measure of spread of a distribution, while the standard deviation is not.  Consider a small dataset: `2, 4, 6, 8, 10`. The mean and median are both `6`. If `10` is replaced by `40`, the median remains the same but the mean increases to `12`. Similarly, the standard deviation would change from `3.2` to `15.8`, but the IQR would remain the same `8 - 4 = 4`. 

Visual displays like a beeswarm plot are helpful complements to numerical summary statistics. 

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("beeswarm plot", 
                                "robust statistic")
                 )
```

**Box plots and histograms**

Unlike beeswarm plots, box plots and histograms do not show the values of each individual observation. \index{box plot} **Box plots** highlight the values of the first, second, and third quartiles. @fig-trees-carbon-beeswarm-boxplot shows the beeswarm plot in @fig-trees-carbon-beeswarm and a box plot below it.

```{r values-for-boxplot, include = F}
# uses values calculated earlier
# 
lower_w <- q1_r - 1.5 * iqr_r
upper_w <- q3_r + 1.5 * iqr_r

#find whisker bounds
carbon_box <- boxplot(pdxTrees_parks_sample$Carbon_Storage_lb)
lower_w_actual <- carbon_box$stats[1, 1]
upper_w_actual <- carbon_box$stats[5, 1]
```

In a box plot, the interquartile range is represented by a rectangle extending from the first to the third quartile, and the rectangle is split by the median (second quartile). The lines extending from first and third quartiles, commonly referred to as whiskers, reach toward $Q_1 - 1.5\times \textrm{IQR}$ and $Q_3 + 1.5\times \textrm{IQR}$. The whiskers always end at observed data points, so the calculated values define the maximum reach of the whiskers.

For `Carbon_Storage_lb`:

-   $Q_1 - 1.5 \times \textrm{IQR} = `r q1_r` - 1.5\times `r iqr_r` = `r lower_w`$ lbs. The lower whisker extends only to `r lower_w_actual` lbs since there are no negative values of `Carbon_Storage_lb`.

-   The upper whisker potentially extends to $Q_3 + 1.5 \times \textrm{IQR} = `r q3_r` + 1.5\times `r iqr_r` = `r upper_w`$ lbs, but stops at `r upper_w_actual` lbs, the largest value less than $`r upper_w`\,\textrm{lbs}$.

An \index{outlier} **outlier** is a value that is extreme relative to the rest of the data; these are shown as dots on the box plot. There are many large outliers of `Carbon_Storage_lb`, as revealed earlier by the beeswarm plot @fig-trees-carbon-beeswarm.

The beeswarm and box plots in @fig-trees-carbon-beeswarm-boxplot provide different views of a distribution. The detail in the beeswarm plots shows how the observations of carbon storage values become less frequent as values of `Carbon_Storage_lb` increase. The box plot hides those details in favor of clearly summarizing the center and spread of the data. 

```{r carbon-beeswarm-boxplot}
#| label: fig-trees-carbon-beeswarm-boxplot
#| fig-cap: Distribution of `Carbon_Storage_lb` from the Portland trees data.
#| fig-subcap:
#|   - Beeswarm plot
#|   - Box plot
#| fig-alt: |
#|   Two plots showing the same variable, carbon storage in lbs. The upper image is a 
#|   beeswarm plot, the lower is a box plot. 
#| fig-asp: 0.3
#| layout-ncol: 1

library(ggbeeswarm)
plot_df  <- pdxTrees_parks_sample |> 
  mutate(y = "  ") 

ggplot(plot_df,
  mapping=aes(x =  Carbon_Storage_lb, y = y)) + 
  geom_point(shape = 20, cex = .05) +
  geom_quasirandom(method = "pseudorandom", dodge.width = 0.05) +
  scale_x_continuous(
    breaks = seq(0, 18000, 2000))  +
  labs(x = NULL, y = NULL) +
  theme(axis.ticks.y = element_blank()) 
  

ggplot(plot_df, 
  aes(x = Carbon_Storage_lb)) +
  geom_boxplot(outlier.size = 2.5) +
  theme(
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  ) +
  labs(x = "Carbon  Storage (lbs)") +
  scale_x_continuous(
    breaks = seq(0, 18000, 2000)
  ) 

```


A \index{histogram} **histogram** provides a balance between the detail of a beeswarm plot and the compact summary of a box plot. In a histogram, observations are grouped into bins and the height of a bar above each bin is the number of observations in the bin. @fig-trees-carbon-histogram is a histogram showing the distribution of `Carbon_Storage_lb`. The width of each bin is 2,000 lbs, and the bins correspond to the intervals (0, 2000], (2,000, 4,000], $\ldots$, (16,000, 18,000]. The intervals are open on the left and closed on the right; so, for example, a tree storing 2,000 lbs. would be counted in the first bin.[^intro-to-data-7] The number of observations in each bin is shown at the top of the bars.

[^intro-to-data-7]: The default interval for the histogram in R is open on the left, closed on the right. This can be adjusted if desired.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("box plots", 
                                "outlier",
                                "histogram")
                 )
```


```{r trees-carbon-histogram}
#| label: fig-trees-carbon-histogram
#| fig-cap: |
#|   A histogram of `Carbon_Storage_lb` in the Portland trees data.  The histogram shows the
#|   few carbon storage values discussed earlier.
#| fig-alt: | 
#|   A histogram of `Carbon_Storage_lb` in the Portland trees data.  The histogram shows the
#|   few large carbon storage values  discussed earlier.
#|   
#| fig-asp: 0.6

ggplot(pdxTrees_parks_sample, aes(x = Carbon_Storage_lb)) +
  geom_histogram(breaks = seq(0, 18000, 2000), 
                 closed = "right") +
  stat_bin(breaks = seq(0, 18000, 2000), 
           aes(label = ..count..), 
           geom = "text", vjust = -0.5) +
  labs(x = "Carbon storage (lbs)", y = "Count") +
  scale_x_continuous(
    breaks = seq(0, 18000, 2000)
  ) +
  scale_y_continuous(breaks = seq(0, 300, 50),
                     expand = expansion(mult = c(0, 0.1)))
```

Histograms provide a view of the \index{data density} **data density**. Taller bars indicate more frequent observations, while shorter bars represent relatively rare observations. @fig-trees-carbon-histogram shows that most of trees store between 0 and 4,000 lbs of carbon, as was seen in @fig-trees-carbon-beeswarm, and fewer trees store more than  8,000 lbs.

Histograms show the shape of a distribution. The tails of a \index{symmetric distribution} **symmetric distribution** are approximately equal, with data trailing off from the center roughly equally in both directions. Asymmetry arises when one tail of the distribution is longer than the other. A distribution is said to be \index{right-skewed} **right-skewed** when data trail off to the right, and \index{left-skewed} **left-skewed** when data trail off to the left. @fig-trees-carbon-histogram shows a right skewed distribution.

To show data density directly, histograms are sometimes re-scaled so that the total area above bins (the sum of the width $\times$ height of the bars) adds to 1, and the label of the vertical axis corresponds to the height of the re-scaled bars.  For instance, the area under the left-most bin is slightly larger than (2000)(0.0003) = 0.60, so the proportion of the data in the interval (0, 2000) is at least 0.60.  More than 60% of the carbon storage values are $\leq$2000 lbs.

```{r trees-carbon-histogram-density}
#| label: fig-trees-carbon-histogram-density
#| fig-cap: |
#|   A histogram of `Carbon_Storage_lb` in the Portland trees data.  The histogram shows the data density directly.
#| fig-asp: 0.6
bin_width <- 2000
ggplot(pdxTrees_parks_sample, aes(x = Carbon_Storage_lb)) +
  geom_histogram(aes(y = ..density..), binwidth = bin_width, 
                 closed = "right", boundary = 0) +
  labs(x = "Carbon storage (lbs)", y = "Density") +
  scale_x_continuous(
    breaks = seq(0, 18000, 2000)
  )
  
```

@fig-trees-carbon-density shows a **density plot** \index{plot!density}\index{density plot} --  a smoothed version of a histogram with densities instead of counts.  Like the re-scaled histograms, density plots are constructed so that the total area under the curve is 1. 
The details on how to draw density plots  are beyond the scope of this text, but the shape, scale, and spread of the observations are displayed similarly in a histogram as in a density plot.

```{r trees-carbon-density}
#| label: fig-trees-carbon-density
#| fig-cap: |
#|   A density plot of `Carbon_Storage_lb` in the Portland trees data.  
#| fig-alt: | 
#|   A density plot of `Carbon_Storage_lb` in the Portland trees data.  
#|      The plot shows the extreme right skewing of the data 
#|   
#| fig-asp: 0.6
ggplot(pdxTrees_parks_sample, aes(x = Carbon_Storage_lb)) +
  geom_density(fill = IMSCOL[1, 1], alpha = 0.5) +
  labs(x = "Carbon storage (lbs)", y = "Density") +
  scale_x_continuous(
    breaks = seq(0, 18000, 2000)
  ) 
```


The \index{mode} **mode** of a distribution is the location of its prominent peak. @fig-single-bi-multi-modal-plots shows examples with histograms that have one, two, or three major peaks. Such distributions are called \index{unimodal} **unimodal**, \index{bimodal} **bimodal**, and \index{multimodal} **multimodal**, respectively. Any distribution with more than two prominent peaks is called multimodal. Prominent is a subjective term, but it is usually clear in a histogram where the major peaks are. The apparent number of peaks may also change if the number of bins is changed; a general tip is to choose a sufficiently high number of bins to see the overall shape, but not so high that the histogram is excessively jagged.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("distribution",
                                "data density", 
                                "density plot",
                                "symmetric distribution",
                                "right-skewed distribution",
                                "left-skewed distribution",
                                "unimodal distribution",
                                "bimodal distribution",
                                "multimodal distribution")
                 )
```


```{r multi-modal-plots}
#| label: fig-single-bi-multi-modal-plots
#| fig-cap: |
#|   Counting only prominent peaks, the distributions are (left to right)
#|   unimodal, bimodal, and multimodal. 
#| fig-alt: |
#|   Three separate histograms on simulated data. The first histogram
#|   shows a unimodal distribution, the second a bimodal
#|   distribution, and a multimodal distribution.
#| fig-asp: 0.3
#| out-width: 95%

set.seed(835011)
df_modes <- tibble(
  uni   = rchisq(65, 6),
  bi    = c(rchisq(22, 5.8), rnorm(43, 16.5, 2)),
  multi = c(rchisq(20, 3), rnorm(30, 15, 1), rnorm(15, 25, 1.5))
)

p_uni <- ggplot(df_modes, aes(x = uni)) +
  geom_histogram(binwidth = 2) +
  labs(x = NULL, y = NULL) +
  scale_x_continuous(breaks = seq(0, 30, 10)) +
  ylim(0, 23) 
p_bi <- ggplot(df_modes, aes(x = bi)) +
  geom_histogram(binwidth = 2) +
  labs(x = NULL, y = NULL) +
  ylim(0, 23) +
  scale_x_continuous(breaks = seq(0, 30, 10))
p_multi <- ggplot(df_modes, aes(x = multi)) +
  geom_histogram(binwidth = 2) +
  labs(x = NULL, y = NULL) +
  ylim(0, 23) +
  scale_x_continuous(breaks = seq(0, 30, 10))

p_uni + p_bi + p_multi
```

\index{data!pdxTrees|)}

::: {.guidedpractice data-latex=""}
@fig-crabs-satell-histogram shows a histogram for the discrete numerical variable `satell` (number of male satellites) of the 173 female crabs in the `crabs` data. Based on the histogram, describe the distribution and identify whether the median and IQR will be preferable summary statistics for conveying center and spread.[^intro-to-data-8]
:::

[^intro-to-data-8]: The distribution of `satell` has a mode at 0; about 40\% (62) of the 173 females did not have any male satellites. The distribution is severely skewed right, indicating that while a large number of satellites is possible (as many as 15), attracting more than  7 is possible but rare. The shape of the histogram suggests that the median and IQR will be better measures of center and spread than the mean and standard deviation.

```{r crabs-satell-histogram}
#| label: fig-crabs-satell-histogram
#| fig-cap: |
#|   A histogram showing the distribution of the number of male satellites in the crabs data.
#| fig-alt: | 
#|   A histogram showing the distribution of the number of male satellites in the crabs data.
#|     Since the variable `satell` is a discrete numerical variable, the histogram
#|     is similar to a bar graph.
#|   
#| fig-asp: 0.6
ggplot(crabs, aes(x = satell)) +
  geom_histogram(binwidth = 1) +
  stat_bin(binwidth = 1, aes(label = after_stat(count)), geom = "text", vjust = -0.5) +
  labs(x = "Satellites", y = "Count") +
  scale_x_continuous(breaks = seq(0, 15, 1)) 
```

**The empirical rule for symmetric distributions**

\index{data!crabs|(}

The sample standard deviation has a direct interpretation as a measure of spread when a distribution is symmetric. The \index{empirical rule} **empirical rule** states that for symmetric, unimodal distributions, approximately  68%  of the observations are within one standard deviation of the mean, 95%  within two standard deviations, and  99.7% within three standard deviations. The rule is based on the properties of bell-shaped distributions discussed later in @sec-distributions.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("empirical rule")
                 )
```


```{r crab-width-summ-stat,  include = FALSE}
dc  <- crabs
summary(dc$width)
m_c  <- round(mean(dc$width), 1)
med_c  <- round(median(dc$width), 1)
sd_c  <- round(sd(dc$width), 1) 
int_1_lb  <- round(m_c - sd_c, 1)
int_1_ub  <- round(m_c + sd_c, 1)
int_2_lb  <- round(m_c - 2*sd_c, 1)
int_2_ub  <- round(m_c + 2*sd_c, 1)
int_3_lb  <- round(m_c - 3*sd_c, 1)
int_3_ub  <- round(m_c + 3*sd_c, 2)

```

@fig-crabs-width-histogram is a histogram of distribution of female crab widths. The distribution is approximately symmetric, with a slight right skewing; the mean `r m_c`cm is only slightly larger than the median `r med_c`cm.  The standard deviation is `r sd_c`cm.

Applying the empirical rule, approximately 68%  of the female crabs should be between  `r  int_1_lb`  and `r int_1_ub`cm  wide;  95%  should be between `r  int_2_lb` and `r int_2_ub`cm wide.

```{r crab-width}
#| label: fig-crabs-width-histogram
#| fig-cap: |
#|   A histogram of female crab `width` in the crabs data.  
#| fig-alt: | 
#|   A histogram of female crab `width` in the crabs data.  The distribution is slightly right-skewed but 
#|      approximately symmetric.
#|   
#| fig-asp: 0.4

ggplot(crabs, aes(x = width)) +
  geom_histogram(breaks = seq(20, 34, 1)) +
  labs(x = "Female crab width (cm)", y = "Count") +
  scale_x_continuous(
    breaks = seq(20, 34,2)
  )

```

\index{data!crabs|)}

## Relationships in data {#sec-relationships-in-data}

Earlier, @fig-trees-carbon-height-type visualized how the relationship between amount of carbon removed from the atmosphere and tree height differs by functional type. In this example, tree height and functional type are examples of **explanatory variables**, which have potentially useful information about the distribution of the \index{response variable} **response variable**, amount of carbon stored. Do taller trees tend to store more carbon? Does the relationship, or \index{association} **association**, between carbon storage and tree height differ for deciduous trees versus evergreen trees?

Exploring relationships in data is a major goal of statistics, and, indeed, of research in general.  It is important to distinguish between simple associations, where the distribution of a response variable changes as the explanatory variable increases or decreases, and \index{causal relationship} **causal relationships**, where changes in the explanatory variable cause direct changes in the response.  Increasing the heat under a teapot on a stove causes the water to boil, a direct causal relationship.  In settings where afternoon tea is popular, the late afternoon hours might be associated with boiling water to make tea, but the clock does not cause the boiling.  Increased sales of snow boots is associated with more broken bones in elders, but the causal relationship is walking on icy sidewalks.  Sales of snow boots increase in the winter.

Much of this text explores methods for studying relationships, including numerical and graphical methods. This section illustrates numerical and graphical methods for simple associations between two variables, beginning with two categorical variables.  Study designs which examine causal relationships are discussed in @sec-collecting-data. 

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("explanatory variable", 
                                "response variable",
                                "association",
                                "causal relationship")
                 )
```


### Two categorical variables {#sec-relationships-two-categorical}

**Contingency tables**

\index{data!World Values Survey|(}

```{r missing-count-wvs}

load("./data/wvs_edu_health.Rdata")
load("./data/wvs_edu_health_cc.Rdata")

n_original <- nrow(wvs_edu_health)
n_dropped <- nrow(wvs_edu_health) - nrow(wvs_edu_health_cc)
n_vars <- ncol(wvs_edu_health)
n_cases <- nrow(wvs_edu_health_cc)
```

The [World Values Survey](https://www.worldvaluessurvey.org/WVSContents.jsp) (WVS) explores values, beliefs, and cultural norms across 100  countries representing  90%  of the world's population. A national team in each country is responsible for collecting a representative sample of all individuals between the ages 18 and 85 years, inclusive, with a minimum sample size of 1,200 respondents. Interviews are conducted in person, online, or by phone, depending on the resources available in each country. The WVS began in 1981 and is conducted in waves; [Wave 7](https://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp), the most recently conducted wave, was completed in 2022.

This section explores responses to education and health assessment questions from Wave 7 respondents in 9 selected countries, using a dataset with  `r n_vars`  variables and  `r n_cases`  cases. @tbl-wvs-var-descriptions shows the countries in the data used here and the coding for responses to the education and health status questions. @tbl-wvs-9-countries shows the number of respondents from each country.

| Variable | Description |
|:-----------------------------------------|:-----------------------------|
| `country` | Nine countries coded with standard abbreviations: ARG, BRA, CAN, CHN, DEU, EGY, ETH, JPN, KEN, NZL, USA |
| `Education_level` | Ordered categorical variable measuring the highest level of education attained by the respondent: `Lower` (no education to lower secondary education), `Middle` (upper secondary education to short term training designed to prepare someone for the workforce), `High` (Bachelor degree or higher) |
| `Health_status` | Ordered categorical variable with self reported current health status: Very Poor, Poor, Fair, Good, Very Good |

: Variables used from the WVS data. {#tbl-wvs-var-descriptions} {tbl-colwidths="\[25,75\]"}


```{r 9-country-table}
#| label: tbl-wvs-9-countries
#| tbl-cap:  "The number of cases in each of the 9 countries from the WVS data"
#| tbl-pos: H
wvs_edu_health_cc |> 
  count(Country) |> 
  rename(Count = n)  |> 
  adorn_totals(where = "row") |>
  kbl(linesep = "", booktabs = TRUE) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE,
    position = "center")
```

For simplicity, this brief analysis skips two important steps typically performed when preparing a survey for analysis. Because some people sampled do not respond to a survey, the respondents are usually not a completely representative sample from a country's population. The WVS data includes weights for each respondent that can be used to create a further sub-sample that matches the population demographics of each country. That has not been done with these data. In addition, respondents who participate in a survey always have the option not to provide a response. Instead of exploring the reasons for non-response to questions, this analysis is restricted to participants who chose to respond. A small number (`r n_dropped`) of the  `r n_original`  respondents in the original sample chose not to respond to at least one of the questions used here.

```{r wvs-table-elements, echo = FALSE}
df <- wvs_edu_health_cc

t <- table(df$Education_level, df$Health_status)
t_tot <-  addmargins(table(df$Education_level, df$Health_status))
t_rprop <- round(proportions(t, 1), 3)
t_cprop <- round(proportions(t, 2), 3)

```

@tbl-wvs-edu-health is a **contingency table** \index{contingency table} showing the number of responses to the questions about highest education level attained and perceived health status. A contingency table summarizes data for two categorical variables.[^intro-to-data-9] The rows of @tbl-wvs-edu-health correspond to education levels and the columns to health status. The cells of the table contain the counts for each row and column combination. For instance,  `r t_tot["Middle", "Fair"]`  respondents reported a `Middle` level of education (at most a secondary school or specific job training) and `Fair` health status.

[^intro-to-data-9]: A contingency table is also called a \index{two-way table} **two-way table**, and the data in the table are often called \index{cross-classified data} **cross-classified data**.

Contingency tables are characterized by the number of rows and columns corresponding to the levels of the two variables. @tbl-wvs-edu-health shows 3 $\times$ 5 table (3 rows corresponding to education level, 5 rows corresponding to health status) that also include the \index{row totals} **row totals** and \index{column totals} **column totals** for convenience. Collectively, the row and column totals are referred to as the \index{marginal totals} **marginal totals**. The entry in the lower right corner is called the \index{grand total} **grand total**. Examining the totals shows that, for example, among the  `r n_cases`  respondents,  `r t_tot["Middle","Sum"]`  reported `Middle` education.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("contingency table", 
                                "row totals",
                                "column totals",
                                "marginal totals",
                                "two-way table",
                                "cross-classified data")
                 )
```


```{r wvs-edu-health-tbl}
#| label: tbl-wvs-edu-health
#| tbl-cap:  "Health rating by educational level"
#| tbl-pos: H

wvs_edu_health_cc |> 
  count(Health_status, Education_level) |> 
  group_by(Education_level) |> 
  pivot_wider(names_from = Health_status, 
              values_from = n) |> 
  adorn_totals(where = c("row", "col"), name = "Sum") |> 
  kbl(linesep = "",
      booktabs = TRUE) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE) |>
  add_header_above(c(" " = 1, "Health_status" = 5, " " = 1)) |>
  column_spec(1, width = "8em") |>
  column_spec(2:7, width = "4em") |> 
  column_spec(7, bold = TRUE) |> 
  row_spec(4, bold = TRUE) 
```

What else does the table tell us about the  `r t_tot["Sum", "Sum"]`  participants responding to the survey? A large majority of the participants (`r t_tot["Sum", "Good"]`  +  `r t_tot["Sum", "Very Good"]`  =  `r t_tot["Sum", "Good"] + t_tot["Sum", "Very Good"]`) responded that their health was `Good` to `Very Good`. A small number of respondents (`r t_tot["Sum", "Very Poor"]`) reported `Very Poor` health status. This is a generally healthy population.

Does knowing someoneâ€™s education level provide meaningful information when predicting their health status? In other words, is `Educational_status` a useful explanatory variable for the response variable `Health_status`? 

In @tbl-wvs-edu-health-row-prop, the counts in @tbl-wvs-edu-health have been replaced by \index{row proportion} **row proportions**, which represent the \index{conditional distribution} **conditional distribution** of `Health_status` for each level of `Education_level`. These proportions show how health status is distributed within each educational level.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("row proportions", 
                                "column proportions",
                                "conditional distribution")
                 )
```


For example, of the  `r t_tot["Middle", "Sum"]`  respondents with a `Middle` level of education,  `r t_tot["Middle", "Good"]`  had `Good` health status, corresponding to a proportion of  `r t_tot["Middle", "Good"] / t_tot["Middle", "Sum"]`. Forty-six percent of the respondents among those with a secondary school education consider their health status good. The row proportions sum to 1 since everyone within each `Educational_level` is in one (and only one) of the `Health_status` categories.

```{r wvs-edu-health-row-proportion}
#| label: tbl-wvs-edu-health-row-prop
#| tbl-cap:  "Health rating by educational level, with row proportions"
#| tbl-pos: H
wvs_edu_health_cc |>
 count(Health_status, Education_level) |> 
 group_by(Education_level) |> 
 mutate(proportion = n / sum(n)) |>
 dplyr::select(-n)  |> 
 pivot_wider(names_from = Health_status, 
              values_from = proportion) |> 
 adorn_totals(where = "col") |> 
 kbl(linesep = "", booktabs = TRUE, digits = 3) |> 
 kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE) |>
 add_header_above(c(" " = 1, "Health_status" = 5, " " = 1)) |>
 column_spec(1, width = "8em") |>
 column_spec(2:7, width = "4em")  

```

::: {.guidedpractice data-latex=""}
Among the respondents with a bachelor's degree or higher, what proportion reported `Poor` health status? What proportion reported `Poor` or lower health status?[^intro-to-data-11]
:::

[^intro-to-data-11]: The relevant proportion reporting `Poor` health in @tbl-wvs-edu-health-row-prop in the row `High` and the column `Poor`, is  `r t_rprop["High", "Poor"]` . The proportion reporting `Poor` or lower health status is  `r t_rprop["High", "Poor"]` + `r t_rprop["High", "Very Poor"]` = `r t_rprop["High", "Poor"] + t_rprop["High", "Very Poor"]` .

The row proportions in @tbl-wvs-edu-health-row-prop show small differences across the rows but are reasonably consistent. For example, across the three education levels, the least frequent health status was `Very Poor`, while the most frequent was `Good`. At each level of education, the proportion reporting `Poor` health status is less than  10% ; the proportion reporting `Fair` health status falls within the range  20 - 30% . `Educational_level` does not appear to be a useful explanatory variable for `Health_status` since its distribution does not change much across the levels of `Health_status`.


Bar plots can be modified to show relationships in contingency tables. @fig-wvs-edu-health-barplot shows three bar plots with `Educational_level` as an explanatory variable for the response `Health_status`.

-   @fig-wvs-edu-health-barplot(a) is a \index{frequency bar plot} **frequency bar plot** showing the number of observations for the health status responses within each value of `Education_level`. The plot is also called a \index{stacked bar plot} **stacked bar plot** or \index{segmented bar plot} **segmented bar plot** and represents the data in @tbl-wvs-edu-health. It shows the total number of observations for each level of education, but does not make it easy to compare the proportions or the precise number of responses for each `Health_status` category.

-   @fig-wvs-edu-health-barplot(b) is a \index{relative frequency bar plot} **relative frequency bar plot**, illustrating the row proportions from @tbl-wvs-edu-health-row-prop. It displays the proportions of responses within each educational level, making it useful for comparing distributions. However, it obscures the number of responses in each category.

-   @fig-wvs-edu-health-barplot(c) is a \index{dodged bar plot} **dodged bar plot**, with separate bars for each health status category displayed for each Educational_level. This plot also reflects the data in @tbl-wvs-edu-health, but makes it easier to identify of the number of responses for each `Health_status` category within each educational level. However, it also does not show the proportions that indicate the distribution of health status within educational level.

All three plots in @fig-wvs-edu-health-barplot are consistent with the observation that in the WVS data the distribution of `Health_status` is fairly similar across different groups of `Educational_level`.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("frequency bar plot", 
                                "relative frequency bar plot",
                                "dodged bar plot",
                                "segmented bar plot",
                                "mosaic plot")
                 )
```


```{r wvs-edu-health-barplot}
#| label: fig-wvs-edu-health-barplot
#| fig-cap: Three bar plots showing the relationship between educational level and health, WVS data.
#| fig-subcap:
#|   - frequency bar plot
#|   - relative frequency bar plot
#|   - Dodged bar plot
#| fig-alt: | 
#|   Three bar plots showing the relationship between educational level and health, WVS data.
#|   Both variables are self-reported
#| fig-width: 4.0
#| layout: [[50, 50], [-20, 60, -20]]

ggplot(wvs_edu_health_cc, aes(x = Education_level, fill = Health_status)) +
  geom_bar(show.legend = FALSE) +
  labs(x = "Educational level",
       y = "Count",
       fill = "Health_status") 

ggplot(wvs_edu_health_cc, aes(x = Education_level, fill = Health_status)) +
  geom_bar(position = "fill", show.legend = FALSE) +
  labs(x = "Educational level",
       y = "Proportion",
       fill = "Health_status") 

ggplot(wvs_edu_health_cc, aes(x = Education_level, fill = Health_status)) +
  geom_bar(position = "dodge") +
  labs(x = "Educational level",
       y = "Count",
       fill = "Health_status") +
  theme(legend.position = "bottom")

```
**Mosaic plots** \index{mosaic plots} combine aspects of relative frequency and dodged bar plots by showing the size of the levels of the explanatory variable and relative frequency of the response.  @fig-wvs-edu-health-mosaic is a  mosaic plot of the association between educational level (the columns in the plot) and health status (the stacked bars).  More of the respondents reported a `Middle` educational level, so it is the widest column.  The column for `High` educational level is the narrowest.  Within each column, the stacked bars show relative frequencies of `Health_status`.  As with the other three types of bar plots, the explanatory variable is normally used for the columns.

```{r fig-wvs-edu-health-mosaic}
#| label: fig-wvs-edu-health-mosaic
#| fig-cap: |
#|   A mosaic plot of the association between educational level and health status  
#| fig-alt: | 
#|   The width of the bars reflects the relative size of the educational level categories.
#|      Middle education is the most frequent; High is the least frequent
#|   
#| fig-asp: 0.4
ggplot(wvs_edu_health_cc) +
  geom_mosaic(aes(x = product(Education_level), fill = Health_status)) +
  labs(x = "Education level", y = "Health Status") +
  guides(fill = FALSE)

```


What if the question of interest reversed the roles of the explanatory and response variables: given that someone's reported health status is very good, are they more likely to have a high education level?

In @tbl-wvs-edu-health-col-prop counts have been replaced by column proportions. The columns show the conditional distributions of educational level for each reported health status. In this table, `Health_status` serves as the explanatory variable for the response `Educational_level`. Among the respondents reporting `Very Good` for `Health_status`,  31.1%  had a bachelor's degree or higher. In contrast, among the respondents reporting `Very Poor`, only 15.1% had a bachelor's degree or higher. If someone reports `Very Good`, they are approximately twice as likely to have a high education than someone who reports `Very Poor`. 

```{r wvs-edu-health-col-proportion}
#| label: tbl-wvs-edu-health-col-prop
#| tbl-cap:  "Health rating by educational level, with column proportions"
#| tbl-pos: H
wvs_edu_health_cc |>
 count(Health_status, Education_level) |> 
 group_by(Health_status) |> 
 mutate(proportion = n / sum(n)) |>
 dplyr::select(-n)  |> 
 pivot_wider(names_from = Health_status, 
              values_from = proportion) |> 
 adorn_totals(where = "row") |> 
 kbl(linesep = "", booktabs = TRUE, digits = 3) |> 
 kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE) |>
 add_header_above(c(" " = 1, "Health_status" = 4, " " = 1)) |>
 column_spec(1, width = "8em") |>
 column_spec(2:6, width = "4em")  

```

::: {.guidedpractice data-latex=""}
What does the number  `r t_cprop["Lower", "Poor"]`  represent in the table?[^intro-to-data-12]
:::

[^intro-to-data-12]: Among the participants with 'Poor' health status  `r t_cprop["Lower", "Poor"] * 100` % have less than a secondary school education.

::: {.guidedpractice data-latex=""}
Among the participants reporting `Fair` health status, what proportion have a secondary or higher education? [^intro-to-data-13]
:::

[^intro-to-data-13]:  `r t_cprop["Middle", "Fair"]`  +  `r t_cprop["High", "Fair"]`  =  `r t_cprop["Middle", "Fair"] + t_cprop["High", "Fair"]` , or almost  70% .

\index{data!World Values Survey|)}


### One numerical and one categorical variable {#sec-relationships-one-numerical-one-categorical}

\index{data!pdxTrees|(}

```{r portland-trees-numbers-for-text}

df <- pdxTrees_parks_sample
x <- df$Condition
l <- length(x)
a <- (x == "Dead")

mean_carbon_dt <- round(mean(df$Carbon_Storage_lb[a]),1)
med_carbon_dt <- round(median(df$Carbon_Storage_lb[a]),1)
```

How does the amount of stored carbon (`Carbon_Storage_lb`) and the rate at which carbon is sequestered (`Carbon_Sequestration_lb`) vary by tree condition?  In statistical terms, what is the relationship between the explanatory variable tree condition and the response variable carbon storage?

`Condition` is an ordered categorical variable with levels "Dead", "Poor", "Fair", and "Good". As defined in the [training manual](https://www.portland.gov/sites/default/files/2020/training-book-2019-web-version.pdf) for the tree inventory project:

- "Dead": Tree is dead and stands over 3ft high.  

- "Poor": Tree is in a general state of decline as indicated by the presence of cavities, decay, conks, root heaving, or significant dead crown areas.

- "Fair": Tree is in average condition. Tree may need some structural pruning and have some dead branches. Wounds are minimal and there is no major decay. Other signs and symptoms are minimal.

- "Good": Tree is an excellent representative for its species. Roots are sound, trunk is solid with no bark damage, and crown is full with no significant structural problems. No wounds, decay, conks, cavities, root heaving or other symptoms.

@tbl-trees-condition-frequency shows that the large majority (more than 86%) of the trees are in "Fair" condition.  While there are a few dead trees in the complete inventory, there were none in this random sample of 500.

```{r trees-condition-freq-tbl}
#| label: tbl-trees-condition-frequency
#| tbl-cap:  "Distribution of tree condition for the 500 trees in the  Portland trees dataset."
#| tbl-pos: H
pdxTrees_parks_sample |> 
  count(Condition) |>
  rename(Count = n)  |> 
  adorn_totals(where = "row") |>
  kbl(linesep = "", booktabs = TRUE) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  

```

The \index{side-by-side box plots} **side-by-side box plots**  in @fig-trees-condition-carbon-store-boxplot show how carbon storage varies with tree condition. Unsurprisingly, trees in better condition ("Fair" or "Good") store more carbon than trees in poor condition. In the box plots, the median amount of carbon storage is higher for the Fair and Good groups than for the Poor group. Yet while many trees in poor condition are storing relatively low amounts of carbons, some are still storing more than 2,000 lbs of carbon. 

@fig-trees-condition-carbon-store-violin offers a different view with  \index{side-by-side violin plots} **side-by-side violin plots** .  Each \index{violin plot} **violin plot** is a hybrid of a box plot and density plot. The simplicity of a box plot makes it easy to identify quartiles and outliers, but hides detail on the data density of the response. Violin plots add this information by making the "violin" wider at values of the response where there are more observations. The violin plots provide more information about the shape of the distributions, showing how the trees storing the most carbon tend to be in the "Fair" and "Good" groups.  The violin plots shown here contain some of the information in a box plot; the red dots denote the median carbon storage at each level of tree condition, and the vertical bars extend from the first to the third quantile.  



```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("side-by-side box plots",
                                "stacked box plots",
                                "violin plots",
                                "side-by-side violin plots")
                 )
```

```{r fig-trees-condition-carbon-store-boxplot}
#| label: fig-trees-condition-carbon-store-boxplot
#| fig-cap: |
#|   Side-by-side box plots of the distribution of carbon storage by tree condition.
#| fig-alt: | 
#|   Side-by-side box plots of the distribution of carbon storage by tree condition.  
#|   
#| fig-asp: 0.4

ggplot(pdxTrees_parks_sample, aes(
  y = Carbon_Storage_lb, 
  x = Condition)) +
  geom_boxplot() +
  scale_color_openintro("two") +
  labs(y = "Carbon storage (lbs)", x = "Tree condition") +
  scale_y_continuous(
    breaks = seq(0, 16000, 4000))
```

```{r fig-trees-condition-carbon-store-violin}
#| label: fig-trees-condition-carbon-store-violin
#| fig-cap: |
#|   Side-by-side violin plots of the distribution of carbon storage by tree condition.
#| fig-alt: | 
#|   Side-by-side violin plots of the distribution of carbon storage by tree condition. The 
#|   red dot in the center is at the median of carbon storage and the vertical bars extend 
#|   from the first to the third quartile.  
#|   
#| fig-asp: 0.4

ggplot(pdxTrees_parks_sample, aes(
  y = Carbon_Storage_lb, 
  x = Condition)) +
  geom_violin(alpha = 0.5) +
  labs(y = "Carbon storage (lbs)", x = "Tree condition") +
  stat_summary(fun.min = function(x) quantile(x, 0.25), 
               fun.max = function(x) quantile(x, 0.75), 
               geom = "linerange", color = "black", linewidth = 1.2) +
  stat_summary(fun = median, geom = "point", color = "red", size = 3) 
  
```
\index{data!pdxTrees|)}

The details revealed in graphs often give rise to interesting questions to pursue further. It could be helpful for Portland to investigate the trees in fair condition yet storing unusually high amounts of carbon. If city resources are limited, should these trees be prioritized for additional maintenance to prevent their condition from declining? What factors explain why these trees store more carbon than others?

\index{data!crabs|(}

What can be learned from the `crabs` data about the attraction of male satellites to females?

@fig-crabs-color-spine-stacked-satell-boxplot uses stacked box plots to show how the number of male satellites varies with the color of the female (plot a) and the conditions of her spine (plot b).  In this sample of 173 crabs, male satellites favor lighter colored females. As female carapace colors change from dark to light the median number of satellites increases. The median number of satellites is larger than 4 for light medium females, while at least 50% of dark females have no satellites (since the median is 0). The outliers in the box plot corresponding to `dark` show that 3 of the dark females have attracted 8 or more satellites.  

In contrast, the relationship between number of satellites and spine condition shows no clear pattern. Females with one worn or broken spine have fewer satellites that either of the other two categories.


```{r crabs-color-spine-stacked-box}
#| label: fig-crabs-color-spine-stacked-satell-boxplot
#| fig-cap: |
#|   Two stacked box plots of the distribution number of male satellites by color and by spine condition.
#| 
#| fig-alt: | 
#|   The median number of male satellites shows a strong relationship with female color,
#|    with numbers of satellites decreasing as color darkens. There is no evident relationship with 
#     worsening spine condition.
#| fig-asp: 0.4
#| 
library(patchwork)
p1  <- ggplot(crabs, aes(x = satell, y = color)) +
  geom_boxplot() +
  scale_color_openintro("two") +
  labs(y = "Color", x = NULL) +
  scale_x_continuous(breaks = seq(0, 16, 4)) 

p2  <- ggplot(crabs, aes(x = satell, y = spine)) +
  geom_boxplot() +
  scale_color_openintro("two") +
  labs(y = "Spine condition", x = "Number of satellites") +
  scale_x_continuous(breaks = seq(0, 16, 4)) 

combined_plot <- p1/p2 + 
  plot_annotation(tag_level = "a")

combined_plot


```

Stacked, horizontally oriented box plots are useful when examining the same response variable (e.g., number of male satellites) in two or more categorical variables (e.g., color and spine condition) since the horizontal axes can be aligned, as in @fig-crabs-color-spine-stacked-satell-boxplot.

### Two numerical variables {#sec-relationships-two-numerical}

Brockmann's research on horseshoe crab mating confirmed that in addition to female carapace color, female size was also associated with number of satellites. In the `crabs` data, female size is measured with the variables `width` and `weight`. It is reasonable to expect that weight varies directly with width. Is this true in the `crabs` data?

```{r, include = FALSE}
# weight and width of largest crab
largest_crab_stats <- crabs %>% 
  slice_max(width, n = 1) %>% 
  select(weight, width)
```

The relationship between two numerical variables can be explored with a \index{scatterplot} **scatterplot**, such as the one shown in @fig-crabs-width-weight-scatter, where `weight` is plotted on the vertical axis against `width` on the horizontal axis. Scatterplots show a case-by-case view of the relationship between two numerical variables. For instance, the isolated point in the upper right corner of the plot represents a crab that weighs `r select(largest_crab_stats, weight) |> pull()`gm and is `r select(largest_crab_stats, width) |> pull()`cm wide.

@fig-crabs-width-weight-scatter shows that `width` and `weight` are indeed closely related; more specifically, they can be described as being positively associated since crabs with wider carapaces tend to be heavier. Two variables are \index{positively associated} **positively associated** if increasing values of one tend to occur with increasing values of the other; they are \index{negatively associated} **negatively associated** if increasing values of one occurs with decreasing values of the other. If there is no evident relationship between two variables, they are said to be \index{uncorrelated} **uncorrelated** or \index{independent} **independent**. 

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("scatterplot",
                                "positively associated",
                                "negatively associated",
                                "uncorrelated",
                                "independent")
                 )
```




```{r}
#| label: fig-crabs-width-weight-scatter
#| fig-cap: |
#|   A scatterplot showing the relationship between female crab width and weight 
#|   in the crabs data.
#| fig-alt: |
#|    A scatterplot showing the relationship between female crab width and weight 
#|    in the crabs data.  Except for a few outliers, the relationship is approximately
#|    linear.  The point in the upper right corner represents the crab 33.5cm wide
#|     weighing 5200g. 
ggplot(crabs, aes(x = width, y = weight))  +
  geom_point(alpha = 0.3, fill = IMSCOL["black", "full"], shape = 21) +
  labs(x = "Width(cm)", y = "Weight(g)")


```

@fig-crabs-width-weight-scatter-w-line adds a line to the plot from @fig-crabs-width-weight-scatter.^[@sec-simple-linear-regression covers the statistical methods for adding a best fitting line to a scatterplot] The relationship is not perfectly linear since the points do not lie exactly on a line, but the line is a reasonably summary for the cloud of points. When a relationship between two numerical variables tends to follow a straight line, it is called a \index{linear relationship} **linear relationship**. The more tightly the points cluster around a straight line, the stronger the linear relationship. 

```{r}
#| label: fig-crabs-width-weight-scatter-w-line
#| fig-cap: |
#|   A scatterplot showing the relationship between female crab width and weight 
#|   in the crabs data.
#| fig-alt: |
#|    A scatterplot showing the relationship between female crab width and weight 
#|    in the crabs data.
#|    Except for a few outliers, the relationship is linear   
ggplot(crabs, aes(x = width, y = weight))  +
  geom_point(alpha = 0.3, fill = IMSCOL["black", "full"], shape = 21) +
  geom_smooth(method = "lm", se = FALSE, color = IMSCOL["red", "full"]) +
  labs(x = "Width (cm)", y = "Weight (kg)")


```

The relationship between `width` and `weight` is strong enough that it would be reasonable to expect that relationship between `width` and `sattel` would be similar to that between `weight` and `satell`. The two scatterplots in @fig-crabs-satell-width-weight-scatter confirm that is the case. @fig-crabs-satell-width-weight-scatter(a) shows a scatterplot of the response `satell` against the explanatory variable `width`; in @fig-crabs-satell-width-weight-scatter(b) `weight` has replaced `width`. Neither of these relationships is linear because of  the large number of crabs with no satellites depicted in the band of points along the horizontal axis.  
```{r}
#| label: fig-crabs-satell-width-weight-scatter
#| fig-cap: |
#|   Two scatterplots showing the relationships between the explanatory
#|      variables carapace width and female weight and the response variable number
#|      of male satellites.
#| fig-subcap: |
#|    - Carapace width versus number of satellites
#|    - Female weight versus number of satellites
#| 
#| fig-width: 4
#| layout-ncol: 2
ggplot(crabs, aes(x = width, y = satell)) +
  geom_point(alpha = 0.3, fill = IMSCOL["black", "full"], shape = 21) 
# geom_smooth(method = "loess", se = FALSE, color = IMSCOL["blue", "full"])


ggplot(crabs, aes(x = weight, y = satell)) +
  geom_point(alpha = 0.3, fill = IMSCOL["black", "full"], shape = 21) 
#  geom_smooth(method = "loess", se = FALSE, color = IMSCOL["blue", "full"])

```

```{r}
r_width_weight <- round(cor(crabs$width, crabs$weight), 2)
r_width_satell <- round(cor(crabs$width, crabs$satell), 2)
r_weight_satell <- round(cor(crabs$weight, crabs$satell), 2)
```

**Correlation**

**Correlation** \index{correlation} is a numerical summary statistic that measures the strength of a linear relationship between two variables. It is denoted by $r$, the \index{correlation coefficient} **correlation coefficient**,  which takes on values between -1 and 1. The closer $r$ is to 1 or -1, the stronger the linear relationship.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("correlation",
                                "correlation coefficient")
                 )
```


The correlation coefficient for width versus weight is $r$=`r r_width_weight`, reflecting the strength of the relationship.  

Simulated data was used in @fig-correlation-plots to generate some scatterplots and associated correlation coefficients in linear relationships. The figure shows that the closer $r$ is to 1 or -1, the cluster of points shows less scatter and the trend in the linear relationship becomes more evident. 

\index{data!crabs|)}

```{r correlation-plots}
#| label: fig-correlation-plots
#| fig-cap: | 
#|  Scatterplots and their correlation coefficients. The first row shows 
#|     positive associations and the second  negative associations. 
#|     From left to right, strength of the linear association between $x$ and $y$ increases.
#| 
#| fig-asp: 0.5
#| out-width: 100%
#| 
library(gridExtra)
correlation_plot <- function(x_norm, z_norm, rho) {
  y <- rho * x_norm + sqrt(1 - rho^2) * z_norm # Cholesky decomposition
  correlation <- cor(x_norm, y)
  data = cbind(x_norm, y)
  p <- ggplot(data, aes(x = x_norm, y = y)) +
    geom_point() +
    labs(x = NULL,
         y = NULL,
         caption = paste("r = ", formatC(correlation, format = "f", digits = 2))) +
    theme_void() +
    theme(
      panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1),
      strip.background = element_blank(),
      strip.text.x = element_blank(),
      plot.caption = element_text(hjust = 0.5,
                                  size = rel(1.2)),
      plot.margin=unit(c(0.2, 0.2, 0.2, 0.2),"cm")
  ) 
  return(p)
}
set.seed(080546)
n <- 100  
rho <- 0.33  
x <- rnorm(n)
z <- rnorm(n)

# 1st row
# 
p1 <- correlation_plot(x, z, 0.33)
p2 <- correlation_plot(x, z, 0.69)
p3 <- correlation_plot(x, z, 0.95)
p4 <- correlation_plot(x, z, 1.00)

# 2nd row
# 
p5 <- correlation_plot(x, z, -0.30)
p6 <- correlation_plot(x, z, -0.64)
p7 <- correlation_plot(x, z, -0.90)
p8 <- correlation_plot(x, z, -1.00)

grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, nrow = 2)

```


::: {.important data-latex=""}
**Correlation coefficient**

The correlation between two variables $x$ and $y$ is given by:
\begin{align}
  r &=  \frac{1}{n-1}\sum^{n}_{i=1}
  \left(\frac{x_{i}-\overline{x}}
  {s_{x}}\right)\left(\frac{y_{i}-\overline{y}}{s_{y}}\right),
  \label{correlationEquation}
\end{align}
where $(x_1,y_1), (x_2,y_2), \ldots, (x_n, y_n)$ are the $n$ paired values of $x$ and $y$, and $s_x$ and $s_y$ are the sample standard deviations of the $x$ and $y$
variables, respectively.
:::



```{r correlation-for-inf-mort-gni}

all_countries <- nrow(wdi_2022)
df_cc <- wdi_2022 |> 
  drop_na(gni_percap, infant_mortality_rate)

r_cc <- cor(df_cc$infant_mortality_rate, df_cc$gni_percap)
cc_pairs <- nrow(df_cc)

missing <- all_countries - cc_pairs



```

When the relationship between explanatory and response variables is linear, a correlation coefficient near 1 or -1 indicate that the linear relationship is a strong one.  But large correlation coefficients can occur in relationships that are not linear, so a correlation coefficient itself does not imply that a relationship is linear.

\index{data!wdi_2022|(}

@fig-wdi-2022-income-infant-mortality is a scatterplot of infant mortality vs per-capita income for `r cc_pairs` countries using the dataset `wdi_2022` abstracted from the 2022 World Bank Indicators of economic development. ^[The full data set includes data on `r all_countries` countries, but data on both income and infant mortality was not available for `r missing` countries.]    Infant mortality is calculated as the number of  infant deaths before 1 year of age among 1,000 live births.  Per-capita income is measured in US dollars but is adjusted for the buying power of each currency in its own country, using an economic measure called purchasing power parity. The [`wdi_2022`](http://openintrostat.github.io/openintro/reference/wdi_2022.html)  data can be found in the [**openintro**](http://openintrostat.github.io/openintro) R package. 

The correlation between infant mortality and income is `r r_cc `, indicating a potentially strong, negative relationship. However, @fig-wdi-2022-income-infant-mortality reveals the importance of visualizing the relationship instead of relying solely on the correlation coefficient. While infant mortality does tend to decrease as income increases, the relationship would be better summarized with a curve rather than a straight line. An increase in income per capita of $25,000 is associated with a much more drastic change in infant mortality rate at lower rather than higher income per capita.

```{r wdi-infant-mort-gni-scatter}
#| label: fig-wdi-2022-income-infant-mortality
#| fig-cap: A scatterplot of infant mortality rate (on the y-axis) versus the 
#|    per-capita income for 181 countries as of 2022.  Infant mortality rate
#|    is measured as infant deaths before 1 year of age among 1,000 live births.
#|    Income per capita is based on purchasing power parity in international dollars.
#| fig-alt: slightly modified text here

ggplot(df_cc, aes(x = gni_percap, y = infant_mortality_rate)) +
  geom_point(alpha = 0.3, fill = IMSCOL["black", "full"], shape = 21) +
  labs(
    x = "Income per capita",
    y = "Infant mortality rate"
  ) +
  geom_smooth(se = FALSE, color = IMSCOL["black", "full"]) +
  geom_point(
    data = df_cc |> 
    dplyr::filter(country == "China"),
    size = 3, stroke = 2, color = IMSCOL["green", "full"], shape = 1
  ) +
  geom_text(
    data = df_cc |> 
    dplyr::filter(country == "China"),
    label = "China", fontface = "italic",
    nudge_x = 21, nudge_y = -5, color = IMSCOL["green", "full"]
  ) +
  guides(color = FALSE) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "China"),
    aes(
      x = 0, y = infant_mortality_rate, xend = gni_percap, 
      yend = infant_mortality_rate),
      color = IMSCOL["green", "full"],
      linetype = "dashed"
  ) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "China"),
    aes(
      x = gni_percap, y = 0, xend = gni_percap, yend = infant_mortality_rate),
      color = IMSCOL["green", "full"],
      linetype = "dashed"
  ) +
  geom_point(
    data = df_cc |> 
    dplyr::filter(country == "Botswana"),
    size = 3, stroke = 2, color = IMSCOL["red", "full"], shape = 1
  ) +
  geom_text(
    data = df_cc |> 
    dplyr::filter(country == "Botswana"),
    label = "Botswana", fontface = "italic",
    nudge_x = 21, nudge_y = -5, color = IMSCOL["red", "full"]
  ) +
  guides(color = FALSE) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "Botswana"),
    aes(
      x = 0, y = infant_mortality_rate, xend = gni_percap, 
      yend = infant_mortality_rate),
      color = IMSCOL["red", "full"],
      linetype = "dashed"
  ) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "Botswana"),
    aes(
      x = gni_percap, y = 0, xend = gni_percap, yend = infant_mortality_rate),
      color = IMSCOL["red", "full"],
      linetype = "dashed"
  ) +
    geom_point(
    data = df_cc |> 
    dplyr::filter(country == "Guyana"),
    size = 3, stroke = 2, color = IMSCOL["blue", "full"], shape = 1
  ) +
  geom_text(
    data = df_cc |> 
    dplyr::filter(country == "Guyana"),
    label = "Guyana", fontface = "italic",
    nudge_x = 21, nudge_y = -5, color = IMSCOL["blue", "full"]
  ) +
  guides(color = FALSE) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "Guyana"),
    aes(
      x = 0, y = infant_mortality_rate, xend = gni_percap, 
      yend = infant_mortality_rate),
      color = IMSCOL["blue", "full"],
      linetype = "dashed"
  ) +
  geom_segment(
    data = df_cc |> 
    dplyr::filter(country == "Guyana"),
    aes(
      x = gni_percap, y = 0, xend = gni_percap, yend = infant_mortality_rate),
      color = IMSCOL["blue", "full"],
      linetype = "dashed"
  ) +
  scale_x_continuous(labels = waiver()) +
  scale_y_continuous(labels = waiver())
```
\index{data!wdi_2022|)}

### More than two variables {#sec-relationships-more-than-two-variables}

The previous sections introduced some standard graphs for summarizing the relationship between two variables a time: bar plots, side-by-side box and violin plots, and scatterplots. However, a key aspect of statistical thinking is multivariate thinking; in other words, exploring how numerous factors contribute to an outcome. Visualizing such relationships will require going beyond the standard named graphs.

@fig-nyt-megadrought-history is from a [*New York Times* data story](https://www.nytimes.com/interactive/2022/07/20/opinion/ancient-trees-climate-change.html) examining climate extremes based on data collected from the rings of living trees and architectural wooden beams in the American Southwest. Compelling data visualizations often incorporate information from several variables and may not necessarily look like one of the plots previously discussed in this chapter.

```{r}
#| label: fig-nyt-megadrought-history
#| out-width: 96%
#| fig-cap: |
#|   Example of a data visualization incorporating information from more
#|   than two variables: percentage of land, year, and soil moisture percentile
#| fig-pos: H
knitr::include_graphics("images/nyt_megadrought_history.png")
```

Rather than attempt to identify all data visualizations by a specific name (e.g., scatterplot), the statistician Leland Wilkinson proposed a grammar of graphics: a structured language for describing and producing any statistical graphic. Since the publishing of the first edition of *The Grammar of Graphics* in 1991, the grammar of graphics has been implemented in several statistical languages such as in `R` with Hadley Wickham's `ggplot2` package. 

According to the grammar of graphics, all data visualizations are built out of the following main components:

  * The data (i.e., a data frame containing the raw data)
  
  * Geometric objects that visually represent the data, such as bars, points, etc.
  
  * Aesthetic mappings which specify how variables in the data are mapped to aesthetic features (such as color, size, position, etc.) of the geometric representations
  
Decomposing a visualization with the grammar of graphics can be instructive for interpreting complex graphics that involve several variables.

At first glance, @fig-nyt-megadrought-history doesn't appear to be one of the standard graphs. However, closer examination reveals that this visualization is similar to a relative frequency bar plot in which the bars are pushed together to form a contiguous pattern. According to the grammar of graphics, the geometric objects in this figure used to represent the data are bars. How are variables being mapped to the aesthetic features of the bars?

  * There are three variables: year, percentage of land, and soil moisture percentile.
  
  * Year is mapped to the $x$-position; a bar on the right side of the graph corresponds to a larger value of year than a bar on the left side.
  
  * Percentage of land is mapped to the $y$-position; the height of a colored bar will be taller to indicate a higher value for proportion of land. For example, around the year 2000, the height of the dark green segments is very tall, indicating that this time, a majority of the soil had a moisture percentile falling into the dark green "wettest" category. 
  
  * Soil moisture percentile is mapped to color. Although soil moisture percentile is a numerical value, it is expressed on the graph as a categorical variable with six colors. The legend indicates that the cut points for the variable are at the 5th percentile, 25th percentile, 50th percentile, 75th percentile, and 95th percentile. Lower moisture percentiles are associated with brown and dark brown shades, while high moisture percentiles are associated with green and dark green shades. This is an example of a **diverging** \index{diverging} color palette, which uses two contrasting colors with more neutral shades in the center; this type of palette is useful for visualizing data in which both extreme low and extreme high values are of interest.
  
Thus, for a particular year, the distribution of color shows whether a drought was occurring; for example, years in which the bars are mainly a brown shade indicate that the soil was unusually dry. Examining how the color patterns change from left to right gives a sense of how soil moisture has changed over hundreds of years in the American Southwest.

<!---

Need to cite this paper: Dieleman JL, Beauchamp M, Crosby SW, et al. Tracking US Health Care Spending by Health Condition and County. JAMA. Published online February 14, 2025. doi:10.1001/jama.2024.26790

--->

@fig-jama-healthcare-spending is from an observational study conducted to examine which health conditions, types of care, and counties are associated with the highest levels of health care spending in the United States. While @fig-nyt-megadrought-history and this figure look quite different from each other, both use bars as the geometric objects.

  * There are four variables: amount of health care spending, age group, sex, payer
  
  * Amount of health care spending is mapped to the $x$-position (i.e., determines the length of a bar), age group is mapped to the $y$-position (i.e. determines whether a bar is closer to the top or bottom of the graph), and color is mapped to payer.
  
  * Payer indicates whether the health care expenses are being paid by Medicare, Medicaid, private insurance, or by the individual incurring the expenses (i.e., out of pocket). This graph uses a **qualitative** \index{qualitative} color palette; distinct hues are used in order to avoid expressing a notion of order. Qualitative palettes are appropriate for nominal categorical data.
  
  * This visualization is **faceted** \index{facet} by sex; i.e., there is one bar graph for data on males and one bar graph for data on females. Faceting generates multiple graphs that each show a different subset of the data. 

```{r}
#| label: fig-jama-healthcare-spending
#| out-width: 96%
#| fig-cap: |
#|   Example of a data visualization incorporating information from more
#|   than two variables: health care spending, age, sex, and payer
#| fig-pos: H
knitr::include_graphics("images/jama_spending_a.png")
```

@fig-jama-healthcare-spending shows a number of relationships between health care spending, sex, age, and payer. Health care spending generally increases with age group, with the most spending occurring between ages 65 - 75 years regardless of sex and decreasing with subsequent age groups. Starting at age 65 years, Medicare accounts for the majority of health care spending. For the most part, spending patterns are similar for males and females, as seen by the approximate symmetry of the two bar graphs; there are some small differences, such as the approximately \$20 billion higher spending for females between the ages of 30 and 45 relative to males in the same age group, which is likely due to health care costs associated with childbirth. 

::: {.guidedpractice data-latex=""}
Identify the geometric object(s) and the variable mappings in @fig-trees-carbon-height-type. What type of color palette is being used?[^intro-to-data-14]
:::

[^intro-to-data-14]: The data are being represented by points. Tree height is mapped to $x$-position, amount of carbon sequestered is mapped to $y$-position, and functional type is mapped to color. A qualitative color palette is being used.

Opportunity Insights is a research initiative based at Harvard University and led by Raj Chetty, John Friedman, and Nathaniel Hendren, with the goal of improving upward mobility in the United States by studying barriers to economic opportunity and translating findings into policy change.\footnote{https://opportunityinsights.org/} As part of a 2017 study to understand the effect of the higher education system on upward mobility, Chetty et al. constructed an anonymized dataset covering all college students in the United States from 1999 - 2013 (30 million students) that includes parental income distributions and student earnings outcomes by college. Monetary values are measured in 2015 dollars; i.e. adjusted for inflation to 2015 dollars. These data are in the `openintro` data package as the `opp_insights_college` dataset.

Chetty et al. were particularly interested in characterizing colleges' mobility rates---at which colleges do the largest number of children come from poor families and end up in the upper middle class? They defined a college's mobility rate as the percentage of students with parents in the bottom income quintile who ended up in the top $x$% (in their mid-30s). The variable `mr_kq5_pq1` refers to the percentage of students with parents in the bottom income quintile who ended up in the top income quintile (i.e., top 20\%).

@fig-opp-insights-mobility shows data on the ten schools in each selectivity tier that have the highest mobility rate, out of the four-year private and public non-profit colleges with enrollment higher than 2,000 students. Each college is represented by a point. Mobility rate (`mr_kq5_pq1`) is mapped to the $y$-position, annual cost of attendance for the bottom quintile (i.e., cost of attendance for students in the bottom income quintile after accounting for financial aid) is mapped to the $x$-position, selectivity tier is mapped to color, and instructional expenditures per capita is mapped to size. 

As recorded in the data, school tier is an ordinal categorical variable. Schools are ranked based on how selective a school is; schools that admit a smaller percentage of applicants are more selective. The Ivy Plus schools are the most selective. The selectivity tiers are Ivy Plus, Other elite schools, Highly selective, Selective, and Nonselective. A **sequential** \index{sequential} color palette is used to express ordering; the progression of colors from light to dark implies ordering, unlike the use of different hues in a qualitative palette. 

```{r, message = F}
#| label: fig-opp-insights-mobility
#| fig-cap: Relationship between upward mobility, cost of attendance for the bottom quintile, and school tier
#| fig-width: 8.5
#| fig-height: 11
#| fig-asp: 1.5

data("opp_insights_colleges")

tab <- opp_insights_colleges |>
  filter(ipeds_enrollment_2013 > 2000,
         type != "for-profit",
         tier_name != "Two-year (public and private not-for-profit)") |>
  mutate(tier_name = droplevels(tier_name)) |>
  mutate(tier_name = case_when(
    tier_name == "Ivy Plus" ~ "Ivy Plus",
    tier_name == "Other elite schools (private and public)" ~ "Other elite schools",
    tier_name %in% c("Highly selective public", "Highly selective private") ~ "Highly selective",
    tier_name %in% c("Selective public", "Selective private") ~ "Selective",
  tier_name %in% c("Nonselective 4-year public", "Nonselective 4-year private") ~ "Nonselective"
  )) |>
  mutate(tier_name = fct_relevel(tier_name, 
                                 "Ivy Plus", "Other elite schools",
                                 "Highly selective", "Selective")) |>
  group_by(tier_name) |>
  slice_max(mr_kq5_pq1, n = 10) |>
  select(name, tier_name, mr_kq5_pq1, 
         scorecard_netprice_2013, exp_instr_pc_2013) |>
  arrange(desc(exp_instr_pc_2013))

#using colorRampPalette 
#only take the 3rd - 9th colors in the palette
library(RColorBrewer)
BuPu <- brewer.pal(9, "BuPu")[3:9]
BuPu_custom <- colorRampPalette(BuPu)(5)

tab |>
  ggplot(aes(x = scorecard_netprice_2013, y = mr_kq5_pq1,
             col = tier_name, size = exp_instr_pc_2013)) +
  geom_point(alpha = 0.70) +
  #scale_color_viridis(discrete = TRUE, option = "plasma") +
  #scale_color_brewer(type = "seq", palette = "BuPu", direction = -1) +
  scale_color_manual(values = BuPu_custom) +
  #scale_color_manual(values = colors) +
  labs(color = "Tier Name",
       size = "Instructional Expenditures Per Capita",
       y = "Mobility Rate (KQ5)",
       x = "Annual Cost of Attendance for Bottom Quintile (USD)") +
  theme(legend.position = "bottom", legend.box = "vertical") +
  guides(color = guide_legend(nrow = 2)) +
  geom_text_repel(aes(label = name), size = 3, show.legend = FALSE,
                  max.overlaps = Inf)
```
Unlike for some of the scatterplots shown earlier in this chapter, the points in @fig-opp-insights-mobility do not show an obvious pattern; i.e., a simple line or curve cannot be fit to these data. Indeed, relationships between variables often require a more thorough explanation than briefly being described as positive or negative.

There is not a clear association between mobility rate and annual cost of attendance for low-income students, in the sense that knowing a school's cost of attendance isn't fully informative for predicting whether the school has a relatively high or low mobility rate. For example, on the right side of the graph with annual cost of attendance for the bottom quintile of almost \$30,000 are MCPHS University and Rose-Hulman Institute of Technology. While MCPHS University has a high mobility rate of almost 10\%, Rose-Hulman Institute of Technology has a mobility rate of less than 2.5\%.

Notably, there is a cluster of selective schools (CUNY colleges) that have moderate instructional expenditures per student but unusually high mobility rates of around 10\% and higher, for which the cost of attendance is less than \$10,000. The Ivy Plus schools also cluster together and have some of the lowest annual costs of attendance in combination with the highest instructional expenditures per capita, but they tend to have a lower mobility rate (under 2.5\%) than the schools in other tiers.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("diverging",
                                "qualitative",
                                "facet",
                                "sequential")
                 )
```  
  
## Case study: developmental disability support {#sec-developmental-disability}

\index{data!dds.discr|(}


```{r}
dds_reformat <- dds.discr |> 
  mutate(age.cohort = 
           factor(age.cohort)) |> 
  mutate(age.cohort = fct_recode(age.cohort,
    "0 - 5" = "0 - 5",
    "6 - 12" = "6-12",
    "13 - 17" = "13-17",
    "18 - 21" = "18-21",
    "22 - 50" = "22-50",
    "51+"  = "51 +"), ordered = TRUE) |> 
  mutate(age.cohort = fct_relevel(age.cohort,
    "0 - 5",
    "6 - 12",
    "13 - 17",
    "18 - 21",
    "22 - 50",
    "51+")
  ) |> 
  mutate(ethnicity = recode(
    ethnicity,
    "White not Hispanic" = "White non-Hispanic")
  )
```    

In the United States, individuals with developmental disabilities typically receive services and support from state governments. These disabilities are generally lifetime chronic conditions such as autism and cerebral palsy.  In California, funds are allocated to developmentally-disabled residents through the California Department of Developmental Services (DDS) and individuals receiving funds are referred to as â€˜consumersâ€™. California law specifies that no individual may be denied funds or services based on their ethnicity, age or gender.

In the early 2000s, a team of researchers examined the annual expenditures on consumers by ethnicity and found that mean annual expenditures for Hispanic consumers were approximately one-third of that for White non-Hispanic consumers. This finding led to allegations of ethnic discrimination against the California DDS.

The dataset, `dds.discr`, from the R package `openintro`, represents a sample of 1,000 DDS consumers (out of a total population of approximately 250,000). It includes information on age, gender, ethnicity, and the amount of financial support provided per consumer by the DDS.  ^[The dataset is based on real attributes of consumers but has been altered to maintain privacy.] The [`dds.dscr`](http://openintrostat.github.io/openintro/reference/dds.discr.html)  data can be found in the [**openintro**](http://openintrostat.github.io/openintro) R package. This dataset also appears in @taylor2014simpson, which provides a similar but more detailed analysis than that presented here.

@tbl-dds-variables shows the definitions of the variables in the dataset.

| Variable Name | Variable description |
|:------------------------------|:----------------------------------------|
| id | Unique identification code for each resident |
| age.cohort | Age in years in six categories: 0 - 5, 6 - 12, 13 - 17, 18 - 21, 22 - 50, and 51+ |
| age | Age, measured in years |
| gender | Gender, recorded as either Female or Male |
| expenditures | Amount of expenditures spent annually by the State on an individual, measured in US dollars (USD) |
| ethnicity | Ethnic group, recorded as either American Indian, Asian, Black, Hispanic, Multi Race, Native Hawaiian, Other, or White non-Hispanic |

: Variable descriptions for `dds.discr`. {#tbl-dds-variables} {tbl-colwidths="[25,75]"}

```{r numbers-for-dds-text}
df <- dds_reformat
a <- (df$ethnicity) == "Hispanic"
b <- (df$ethnicity) == "White non-Hispanic"
m_hisp <- round(mean(df$expenditures[a]), 0)
med_hisp <- round(median(df$expenditures[a]), )
m_not_hisp <- round(mean(df$expenditures[b]), 0)
med_not_hisp <- round(median(df$expenditures[b]), 0)
ratio_eth <- round(100 * m_hisp/m_not_hisp, 1)
```


Do the distributions of expenditures across ethnic groups suggest the possibility of ethnic bias, as claimed in the original assertion? The table @tbl-dds-exp-ethnicity-summ displays the mean and median expenditures (rounded to the nearest dollar) alongside the number of observations in each ethnic group. The mean expenditures certainly vary across groups.

Among groups with more than 100 observations, the largest discrepancy is between Hispanic and White non-Hispanic, with mean expenditures of \$`r comma(m_hisp)` and \$`r comma(m_not_hisp)`, respectively. Hispanic expenditures were `r ratio_eth`% of those for White non-Hispanics, suggesting the possibility of bias in funding.  This case study focuses on those two ethnic groups.


```{r dds-exp-by-ethnicity-summ}
#| label: tbl-dds-exp-ethnicity-summ
#| tbl-cap: |
#|      Mean and median expenditures (USD) and number of cases by ethnicity, `dds.dscr`
#| alt-cap:  | 
#|    The number of observations in the 3 ethnicity groups American Indian,
#|       Native Hawaiian and Other are too small for those groups to be 
#|       informative.
#| tbl-pos: H
dds_reformat |> 
  group_by(ethnicity) |> 
  summarise(
    Mean = (round(mean(expenditures), 0)),  
    Median = (round(median(expenditures), 0)),      
    Count = n()                    
  )  |> 
  rename(Ethnicity = ethnicity) |> 
  kbl(linesep = "", 
      booktabs = TRUE,
      align = c("l", "r", "r", "r")) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  
```
Does this association between expenditures and ethnicity imply ethnic discrimination, or might additional factors influence this apparent relationship? There is good reason to expect a strong relationship between age and funding levels. As consumers age, they are less likely to live with parents or guardians and more likely to require increased assistance for housing, food, and supportive care. The six levels in `age.cohort` were constructed with this progression in mind.  The data in @tbl-dds-exp-ethnicity-summ have been combined across the age categories, "lumping" the data into a single group for each ethnicity. When data are combined across levels of a categorical variable it is termed \index{aggregated data} **aggregated data**.  Data aggregated across age groups cannot show any relationship between age and expenditures.

The side-by-side box plots in @fig-dds-exp-age-boxplot show the strong, positive relationship between age category and expenditures in Hispanic and White non-Hispanic consumers.  Median expenditures gradually increase until age 17, then increase noticeably in the 18 - 21 age group, followed by larger increases in the last two categories, when consumers are more likely to be living in settings requiring additional financial support from the DDS. @tbl-dds-exp-age-summ shows the mean and median expenditures in each of the age categories.



```{r}
#| label: fig-dds-exp-age-boxplot
#| fig-cap: Side by side box plots of expenditures by age category 
#|      
#| alt-cap: |
#|       Coming
#| fig-width: 8

dds_reformat |> 
  filter(ethnicity == "Hispanic" | ethnicity == "White non-Hispanic") |> 
  ggplot(aes(
  y = expenditures, 
  x = age.cohort)) +
  geom_boxplot() +
  scale_color_openintro("two") +
  labs(y = "Expenditures (USD)", x = "Age category") 

```

```{r tbl-dds-exp-age-summ}
#| label: tbl-dds-exp-age-summ
#| tbl-cap: |
#|      Mean and median expenditures (USD) and number of cases by age category, `dds.dscr`
#| alt-cap:  | 
#|    Coming
#| tbl-pos: H
dds_reformat |> 
  group_by(age.cohort) |> 
  summarise(
    Mean = round(mean(expenditures), 0),  
    Median = round(median(expenditures), 0),      
    Count = n()                    
  )  |> 
  rename("Age category" = age.cohort) |> 
  kbl(linesep = "", booktabs = TRUE) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  
```



California routinely records the age and ethnic distributions in its state population and found that in 2007 --- the time these DDS data were analyzed --- Hispanics tended to be younger than White non-Hispanics. ^[The 2007 [California Current Population Survey Report](https://dof.ca.gov/wp-content/uploads/sites/352/Reports/Demographic_Reports/documents/CACPS07_final.pdf) reported that "The median age for all race/ethnic groups in California was 34, ranging from 41 for Whites to 27 for Hispanics".]

The bar plots in @fig-dds-eth-age-barplot show a similar relationship between age and ethnicity in the `dds.discr` data.  The dodged bar plot shows that up until age 21, fewer consumers in each age group are White non-Hispanic.  That trend reverses in the two age groups older than 22.  The relative frequency bar plot provides another view of this phenomenon -- increasing proportions of White non-Hispanic consumers across age groups, from approximately 27% in the 0 - 5 age group to more than 75% in the 51+ age group.



```{r dds-eth-age-freq-bar}
#| label: fig-dds-eth-age-barplot
#| fig-cap: |
#|   Bar plots showing the relationship between `age.cohort` and `ethnicity`
#| fig-subcap: 
#|    - Relative frequency bar plot  
#|    - Dodged bar plot
#| fig-asp: 0.5
#| layout-ncol: 1
dds_plot <- dds_reformat |> 
  filter(ethnicity == "Hispanic" | ethnicity == "White non-Hispanic") 

ggplot(dds_plot, aes(x = age.cohort, fill = ethnicity)) +
  geom_bar(position = "dodge") +
  labs(x = "Age category",
       y = "Count",
       fill = "Ethnicity" ) +
     theme(legend.position = "bottom") 

ggplot(dds_plot, aes(x = age.cohort, fill = ethnicity)) +
  geom_bar(show.legend = FALSE, position = "fill") +
  labs(x = NULL,
       y = "Proportion",
       fill = "Ethnicity") 

```

How might this age/ethnicity/expenditure relationship lead to @tbl-dds-exp-ethnicity-summ when age of the consumer is not accounted for?  A hypothetical example helps illustrate what might happen when data are aggregated over an important variable.

```{r calcs-for-simpson-example}
bill_young_1 <- 100
bill_old_1 <- 125
young_a <- 20
old_a <- 180
young_b <- 180
old_b <- 20
tot_bill_a <- bill_young_1 * young_a + bill_old_1 * old_a
tot_bill_b <- bill_young_1 * young_b + bill_old_1 * old_b


bill_young_1_a <- 90
bill_old_1_a <- 115

bill_young_1_b <- 100
bill_old_1_b <- 125

tot_bill_a_2 <- bill_young_1_a * young_a + bill_old_1_a * old_a
tot_bill_b_2 <- bill_young_1 * young_b + bill_old_1 * old_b

```


Suppose a health care organization is being audited for the billing at its two urgent care clinics, Clinic A and Clinic B. The auditor finds that the average charge per patient at Clinic A is \$122.50 but is  \$102.50 at Clinic B. The auditor tells the CEO that the staff at Clinic A seems to be overcharging, in violation of federal and state law.  

The data analytics team at the organization notices that the auditor has not accounted for different patient age mix at the two clinics. Clinic A is located at its community hospital in the suburbs, while B is located in a pharmacy in the financial district.   The patients in the financial district location tend to work in the technology sector and be younger than those in the suburban location, and older patients tend to have more serious conditions.  For simplicity, assume that patients age 50 or older are billed \$125 for each visit; patients less than 50 are billed $100 per visit.

The auditor's data are based on a sample of 400 total visits to the two clinics, 200 to each.  The data are also evenly divided between the age groups, with 200 patients in each of the two age groups. As expected, the distributions of patient ages differ in the two clinics.  In Clinic A 10% of the patients are less than 50 years old; 90% are 50 or older.  In Clinic B the reverse is true.  

@tbl-simpson-billing-example summarizes the data and adds a two columns showing total and per patient billing for each clinic.

    
| Clinic   | Patients $< 50$ | Patients $\ge 50$ | Total billing |  Per patient billing |
| -------- | ----------------| ----------------- | ------------- | -------------------- | 
|  A       | 20               | 180              |    \$24,500   |    \$122.50         |
|  B       | 180              | 20               |    \$20,500   |    \$102.50          |

: Patient billing by clinic and age, hypothetical example {#tbl-simpson-billing-example} 

In clinic A, the total billing is (20)(100)  + (180)(125) = \$24,500, an average charge of $24,500/200 = \$122.50 per patient, while in B, the total billing is (180)(100) + (90)(125) = \$20,500, an average charge of \$105.50 dollars per patient.

The auditor's calculations were correct, but Clinic A is not overcharging. By aggregating data across the two age groups the auditor failed to account for the different age distributions in the clinics.  Within each age group, Clinic A charges the same as B, but its total billing is larger because it treats older patients.  Age is a \index{confounding variable} **confounding variable** , a variable that is associated with both response and explanatory variables and influences the explanatory/response relationship.  Confounding variables are also called confounders.  If a potential confounder was not measured, it is sometimes called a \index{lurking variable} **lurking variable**.

This particular example of a confounder illustrates \index{Simpson's Paradox} **Simpson's Paradox**, a setting in which an association observed in each of several groups may disappear or reverse direction when the groups are combined. In statistical terms, an association between two variables $X$ and $Y$ may disappear or reverse direction once data are partitioned into sub-populations based on a third variable $Z$. 

The clinic billing example also illustrates the important distinction between an observed association and a causal relationship.  Based on the association between clinic and average billing, the auditor mistakenly concluded that clinic staff were the cause of the differential billing.  Instead, the different age distributions at the two clinics were the cause.


```{r}
#| label: fig-age-clinic-billing
#| fig-align: center
#| fig-asp: 0.4
#| fig-cap: |
#|   The relationships between clinic, patient average billing and age
#| fig-alt: |
#|   The three boxes represent: patient ages,
#|   the age distribution for a particular clinic, and patient billing. 
#|   The gray arrow with a ? is the apparent relationship between clinic and average billing
#|   led the auditor to believe Clinic A was over-charging, but the relationship was the 
#|   result of the older patient population in Clinic A.  Age is a lurking variable.
#| out-width: 60%
par_og <- par(no.readonly = TRUE) # save original par
par(mar = rep(0, 4))
plot(c(-0.05, 1.2),
  c(0.39, 1),
  type = "n",
  axes = FALSE
)
text(0.59, 0.89, "Patient age", cex = 1)
rect(0.4, 0.8, 0.78, 1)
text(0.3, 0.49, "Clinic demographics", cex = 1)
rect(0.1, 0.4, 0.48, 0.6)
arrows(0.49, 0.78, 0.38, 0.62,
  length = 0.08, lwd = 1.5
)
text(0.87, 0.5, "Patient billing", cex = 1)
rect(0.71, 0.4, 1.01, 0.6)
arrows(0.67, 0.78, 0.8, 0.62,
  length = 0.08, lwd = 1.5
)

arrows(0.5, 0.5, 0.69, 0.5,
  length = 0.08, col = IMSCOL["gray", "f1"]
)
text(0.595, 0.565, "?",
  cex = 1.5, col = IMSCOL["gray", "full"]
)
par(par_og) # restore original par
```

A closer look at the calculations for the average billing helps explain Simpson's Paradox.  For Clinic A, the average is 
\begin{align*}
  245.00 &= 24,500/200 \\
         &= \frac{(20)(100) + (180)(125)}{200} \\
            &= \frac{(20)(100)}{200} + \frac{(180)(125)}{200} \\
            &= (0.10)(100) + (0.90)(125).
\end{align*}

A similar calculation for Clinic B shows
\begin{align*}
  102.50 &= \frac{(180)(100) + (20)(125)}{200} \\
         &= (0.90)(100) + (0.10)(125).
\end{align*}

Both calculations are \index{weighted averages} **weighted averages**, calculations in which values are averaged after multiplying by weights rather than simply added then divided by the number of values (i.e., multiplied by the reciprocal of the number of values).  Clinic A has a smaller weight than B for the \$100 charge and a larger weight for the \$125 charge.  When the data are not partitioned by age, per patient average charges are weighted averages across the categories of age.  Age is affecting the average even when not used explicitly in the analysis.

```{r }
#| include: false
terms_chp_1 <- c(terms_chp_1, c("weighted average",
                                "Simpson's Paradox",
                                "confounding variable",
                                "lurking variable",
                                "aggregated data")
                 )
```



::: {.workedexample data-latex=""}
Simpson's Paradox can create even more surprising results.  Suppose that the staff at Clinic A is more efficient than that at B, so that billing per patient in each age category is less in A than in B.  Specifically, assume that Clinic A staff bill \$90 for a patient less than 50 years old, and \$115 per patient for older patients, instead of the \$100 and \$125 in B.  Show that even though its billing is less than that in Clinic B for each age group, its overall average charge per patient is larger.

------------------------------------------------------------------------

Since the billing in Clinic B has not changed, its average billing remains \$102.50.  The total billing in A will now be (20)(90) + (180)(115) = \$22,500, for an overall average of \$112.50.  Had this been the case in the hypothetical example, the auditor would have claimed that Clinic A was over-charging, even though it billed patients in both age categories less than B.
:::


Simpson's Paradox is at work in the `dds.discr` data.  In @tbl-dds-exp-ethnicity-summ the overall mean expenditures are less for Hispanics versus White non-Hispanics (\$`r m_hisp` versus \$`r m_not_hisp`).  @tbl-dds-exp-simpson illustrates the effect of adjusting for age by calculating average expenditures within each age category.  The difference column (`Hispanic` - `White non-Hispanic` expenditures) shows that in every age category but one (18 - 21) average expenditure for Hispanics are in fact larger than that for White non-Hispanics.


```{r dds-exp-simpson-tbl}
#| label: tbl-dds-exp-simpson
#| tbl-cap: |
#|    Mean expenditures (USD) by ethnicity within age categories 
#| alt-cap:  | 
#|     Coming
#| tbl-pos: H

dds_simpson_tbl <- dds_reformat |> 
  filter(ethnicity == "Hispanic" | ethnicity == "White non-Hispanic") |> 
  group_by(age.cohort, ethnicity) |> 
  summarise(
    "Mean expenditures" = round(mean(expenditures), 0),
    .groups = "drop"
  )  |> 
  pivot_wider(names_from = ethnicity, values_from = "Mean expenditures") 
  

dds_simpson_tbl$Difference = dds_simpson_tbl$Hispanic - 
  dds_simpson_tbl$'White non-Hispanic'  
# could not get this simply transf to work pipe with mutate
# Don't know why.  Prevents use of comma
dds_simpson_tbl |> 
  rename("Age cohort" = age.cohort) |> 
  kbl(linesep = "",
      booktabs = TRUE,
      align = c("l", "r", "r", "r")) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE)

```

As in the hypothetical example, examining weighted averages explains the difference between overall and within age category averages.

::: {.workedexample data-latex=""}
@tbl-dds-rel-freq-ethnicity shows the proportions of Hispanics and White non-Hispanics in each of the age categories.  Show that the overall average expenditures for Hispanics and White non-Hispanics are weighted averages, with weights taken from the proportions within age groups. Explain the result.
```{r dds-rel-freq-ethnicity}
#| label: tbl-dds-rel-freq-ethnicity
#| tbl-cap: |
#|    Proportions of Hispanics and White non-Hispanics by age cohort 
#| alt-cap:  | 
#|     Coming
#| tbl-pos: H
dds_reformat |> 
  filter(ethnicity == "Hispanic" | ethnicity == "White non-Hispanic") |> 
  count(age.cohort, ethnicity) |> 
  group_by(ethnicity) |>
  mutate(Proportion = n/sum(n)) |>
  dplyr::select(-n)  |> 
  rename("Age cohort" = age.cohort) |> 
  pivot_wider(names_from = ethnicity, 
              values_from = Proportion) |> 
  adorn_totals(where = "row") |> 
  kbl(linesep = "", booktabs = TRUE, digits = 2) |> 
  kable_styling(
    bootstrap_options = c("striped", "condensed"),
    latex_options = c("striped"),
    full_width = FALSE
  )
  

```

-----------------------------------------------------------------------
For Hispanics:
1,393(.12) + 2,312(.24) + 3,955(.27) + 9,960(.21) + 40,924(.11) + 55,585(.05) = \$11,162. 

For White non-Hispanics:
1,367(0.05) + 2,052(.11) + 3,904(.17) + 10,133(.17) + 40,188(.33) + 52,760(.16) = \$24,384. 	

The weights for the youngest four cohorts, which have lower expenditures, are higher for the Hispanic population than the White non-Hispanic population; additionally, the weights for the oldest two cohorts, which have higher expenditures, are higher for the White non-Hispanic population. This leads to overall average expenditures for the White non-Hispanics being higher than for Hispanics. ^[Due to rounding, the overall averages calculated via this method will not exactly equal \$11,066 and \$24,698.]

:::

The role of the confounding variable age cohort in the `dds.dscr` is shown graphically in @fig-dds-age-ethnicity-confounding. 

```{r}
#| label: fig-dds-age-ethnicity-confounding
#| fig-align: center
#| fig-asp: 0.4
#| fig-cap: |
#|   The relationships between ethnicity, age cohort and expenditures
#| fig-alt: |
#|   The gray arrow with a ? is the apparent relationship between ethnicity and mean 
#|   mean expenditures that led to the initial claim of discrimination.  The relationship
#|   was caused by the confounding variable age cohort.
#| out-width: 60%
par_og <- par(no.readonly = TRUE) # save original par
par(mar = rep(0, 4))
plot(c(-0.05, 1.2),
  c(0.39, 1),
  type = "n",
  axes = FALSE
)
text(0.59, 0.89, "Age cohort", cex = 1)
rect(0.4, 0.8, 0.78, 1)
text(0.3, 0.49, "Ethnicity", cex = 1)
rect(0.1, 0.4, 0.48, 0.6)
arrows(0.49, 0.78, 0.38, 0.62,
  length = 0.08, lwd = 1.5
)
text(0.87, 0.5, "Expenditures", cex = 1)
rect(0.71, 0.4, 1.01, 0.6)
arrows(0.67, 0.78, 0.8, 0.62,
  length = 0.08, lwd = 1.5
)

arrows(0.5, 0.5, 0.69, 0.5,
  length = 0.08, col = IMSCOL["gray", "f1"]
)
text(0.595, 0.565, "?",
  cex = 1.5, col = IMSCOL["gray", "full"]
)
par(par_og) # restore original par
```

\index{data!dds.discr|)}

## Chapter review {#sec-chp1-review}



### Summary

This chapter introduced important concepts in summarizing data numerically and graphically, both for individual variables and for relationships between variables.  The appropriate methods for summarizing data depend on the data type.  Categorical variables are summarized in tables and bar plots.  With numerical variables, summary statistics such as the mean or median characterize the center of a distribution; standard deviations and interquartile ranges are used to characterize its spread.  Beeswarm plots, box plots, violin plots, histograms and density plots all provide visual displays of the distributions of numerical variables.  These fundamental ways of exploring distributions will be used in many ways throughout the remaining chapters.

The relationship or association between two variables can be summarized in contingency tables (two categorical variables), side-by-side box or violin plots (one categorical and one continuous variable), or scatterplots (two continuous variables).  It is important to distinguish between simple associations and causal relationships.  Most relationships observed in data are simple associations; studies designed to establish causal relationships are examined in @sec-collecting-data.


### Terms


```{r}
#| label: tbl-terms-chp-1
#| tbl-cap: Terms introduced in this chapter.
#| tbl-pos: H
make_terms_table(terms_chp_1)
```

\clearpage

## Exercises {#sec-chp1-exercises}

Answers to odd-numbered exercises can be found in [Appendix -@sec-exercise-solutions-01].

::: {.exercises data-latex=""}
{{< include exercises/_01-ex-intro-to-data.qmd >}}
:::


